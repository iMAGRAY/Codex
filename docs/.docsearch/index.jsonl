{"id": "docs/advanced.md::chunk-1", "path": "docs/advanced.md", "chunk_id": 1, "text": "```yaml - name: Update changelog via Codex run: | npm install -g @openai/codex codex login --api-key \"${{ secrets.OPENAI_KEY }}\" codex exec --full-auto \"update CHANGELOG for next release\" ```", "embedding": null}
{"id": "docs/advanced.md::chunk-2", "path": "docs/advanced.md", "chunk_id": 2, "text": "- Latest source builds include `codex exec resume` (examples below). - Current released CLI may not include this yet. If `codex exec --help` shows no `resume`, use the workaround in the next subsection.", "embedding": null}
{"id": "docs/advanced.md::chunk-3", "path": "docs/advanced.md", "chunk_id": 3, "text": "# Alternatively, pass the prompt via stdin (source builds) # Note: omit the trailing '-' to avoid it being parsed as a SESSION_ID echo \"ship a release draft changelog\" | codex exec resume --last", "embedding": null}
{"id": "docs/advanced.md::chunk-4", "path": "docs/advanced.md", "chunk_id": 4, "text": "- When using `--last`, Codex picks the newest recorded session; if none exist, it behaves like starting fresh. - Resuming appends new events to the existing session file and maintains the same conversation id.", "embedding": null}
{"id": "docs/advanced.md::chunk-5", "path": "docs/advanced.md", "chunk_id": 5, "text": "The TUI defaults to `RUST_LOG=codex_core=info,codex_tui=info` and log messages are written to `~/.codex/log/codex-tui.log`, so you can leave the following running in a separate terminal to monitor log messages as they are written:", "embedding": null}
{"id": "docs/advanced.md::chunk-6", "path": "docs/advanced.md", "chunk_id": 6, "text": "By comparison, the non-interactive mode (`codex exec`) defaults to `RUST_LOG=error`, but messages are printed inline, so there is no need to monitor a separate file.", "embedding": null}
{"id": "docs/advanced.md::chunk-7", "path": "docs/advanced.md", "chunk_id": 7, "text": "The Codex CLI can be configured to leverage MCP servers by defining an [`mcp_servers`](./config.md#mcp_servers) section in `~/.codex/config.toml`. It is intended to mirror how tools such as Claude and Cursor define `mcpServers` in their respective JSON config files, though the Codex format is slightly different since it uses TOML rather than JSON, e.g.:", "embedding": null}
{"id": "docs/advanced.md::chunk-8", "path": "docs/advanced.md", "chunk_id": 8, "text": "```toml # IMPORTANT: the top-level key is `mcp_servers` rather than `mcpServers`. [mcp_servers.server-name] command = \"npx\" args = [\"-y\", \"mcp-server\"] env = { \"API_KEY\" = \"value\" } ```", "embedding": null}
{"id": "docs/advanced.md::chunk-9", "path": "docs/advanced.md", "chunk_id": 9, "text": "The Codex CLI can also be run as an MCP _server_ via `codex mcp`. For example, you can use `codex mcp` to make Codex available as a tool inside of a multi-agent framework like the OpenAI [Agents SDK](https://platform.openai.com/docs/guides/agents).", "embedding": null}
{"id": "docs/advanced.md::chunk-10", "path": "docs/advanced.md", "chunk_id": 10, "text": "### Codex MCP Server Quickstart You can launch a Codex MCP server with the [Model Context Protocol Inspector](https://modelcontextprotocol.io/legacy/tools/inspector):", "embedding": null}
{"id": "docs/advanced.md::chunk-11", "path": "docs/advanced.md", "chunk_id": 11, "text": "Property | Type | Description -------------------|----------|---------------------------------------------------------------------------------------------------------- **`prompt`** (required) | string | The initial user prompt to start the Codex conversation. `approval-policy` | string | Approval policy for shell commands generated by the model: `untrusted`, `on-failure`, `never`. `base-instructions` | string | The set of instructions to use instead of the default ones. `config` | object | Individual [config settings](https://github.com/openai/codex/blob/main/docs/config.md#config) that will override what is in `$CODEX_HOME/config.toml`. `cwd` | string | Working directory for the session. If relative, resolved against the server process's current directory. `include-plan-tool` | boolean | Whether to include the plan tool in the conversation. `model` | string | Optional override for the model name (e.g. `o3`, `o4-mini`). `profile` | string | Configuration profile from `config.toml` to specify default options. `sandbox` | string | Sandbox mode: `read-only`, `workspace-write`, or `danger-full-access`.", "embedding": null}
{"id": "docs/advanced.md::chunk-12", "path": "docs/advanced.md", "chunk_id": 12, "text": "Property | Type | Description -----------|--------|--------------------------------------------------------------- **`prompt`** (required) | string | The next user prompt to continue the Codex conversation. **`conversationId`** (required) | string | The id of the conversation to continue.", "embedding": null}
{"id": "docs/advanced.md::chunk-13", "path": "docs/advanced.md", "chunk_id": 13, "text": "### Trying it Out > [!TIP] > Codex often takes a few minutes to run. To accommodate this, adjust the MCP inspector's Request and Total timeouts to 600000ms (10 minutes) under ⛭ Configuration.", "embedding": null}
{"id": "docs/authentication.md::chunk-1", "path": "docs/authentication.md", "chunk_id": 1, "text": "1. Update the CLI and ensure `codex --version` is `0.20.0` or later 2. Delete `~/.codex/auth.json` (on Windows: `C:\\\\Users\\\\USERNAME\\\\.codex\\\\auth.json`) 3. Run `codex login` again", "embedding": null}
{"id": "docs/authentication.md::chunk-2", "path": "docs/authentication.md", "chunk_id": 2, "text": "Today, the login process entails running a server on `localhost:1455`. If you are on a \"headless\" server, such as a Docker container or are `ssh`'d into a remote machine, loading `localhost:1455` in the browser on your local machine will not automatically connect to the webserver running on the _headless_ machine, so you must use one of the following workarounds:", "embedding": null}
{"id": "docs/authentication.md::chunk-3", "path": "docs/authentication.md", "chunk_id": 3, "text": "The easiest solution is likely to run through the `codex login` process on your local machine such that `localhost:1455` _is_ accessible in your web browser. When you complete the authentication process, an `auth.json` file should be available at `$CODEX_HOME/auth.json` (on Mac/Linux, `$CODEX_HOME` defaults to `~/.codex` whereas on Windows, it defaults to `%USERPROFILE%\\\\.codex`).", "embedding": null}
{"id": "docs/authentication.md::chunk-4", "path": "docs/authentication.md", "chunk_id": 4, "text": "Because the `auth.json` file is not tied to a specific host, once you complete the authentication flow locally, you can copy the `$CODEX_HOME/auth.json` file to the headless machine and then `codex` should \"just work\" on that machine. Note to copy a file to a Docker container, you can do:", "embedding": null}
{"id": "docs/authentication.md::chunk-5", "path": "docs/authentication.md", "chunk_id": 5, "text": "```shell # substitute MY_CONTAINER with the name or id of your Docker container: CONTAINER_HOME=$(docker exec MY_CONTAINER printenv HOME) docker exec MY_CONTAINER mkdir -p \"$CONTAINER_HOME/.codex\" docker cp auth.json MY_CONTAINER:\"$CONTAINER_HOME/.codex/auth.json\" ```", "embedding": null}
{"id": "docs/authentication.md::chunk-6", "path": "docs/authentication.md", "chunk_id": 6, "text": "If you run Codex on a remote machine (VPS/server) without a local browser, the login helper starts a server on `localhost:1455` on the remote host. To complete login in your local browser, forward that port to your machine before starting the login flow:", "embedding": null}
{"id": "docs/authentication.md::chunk-7", "path": "docs/authentication.md", "chunk_id": 7, "text": "Then, in that SSH session, run `codex` and select \"Sign in with ChatGPT\". When prompted, open the printed URL (it will be `http://localhost:1455/...`) in your local browser. The traffic will be tunneled to the remote server.", "embedding": null}
{"id": "docs/CLA.md::chunk-1", "path": "docs/CLA.md", "chunk_id": 1, "text": "By commenting **“I have read the CLA Document and I hereby sign the CLA”** on a Pull Request, **you (“Contributor”) agree to the following terms** for any past and future “Contributions” submitted to the **OpenAI Codex CLI project (the “Project”)**.", "embedding": null}
{"id": "docs/CLA.md::chunk-2", "path": "docs/CLA.md", "chunk_id": 2, "text": "## 1. Definitions - **“Contribution”** – any original work of authorship submitted to the Project (code, documentation, designs, etc.). - **“You” / “Your”** – the individual (or legal entity) posting the acceptance comment.", "embedding": null}
{"id": "docs/CLA.md::chunk-3", "path": "docs/CLA.md", "chunk_id": 3, "text": "## 2. Copyright License You grant **OpenAI, Inc.** and all recipients of software distributed by the Project a perpetual, worldwide, non‑exclusive, royalty‑free, irrevocable license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute Your Contributions and derivative works.", "embedding": null}
{"id": "docs/CLA.md::chunk-4", "path": "docs/CLA.md", "chunk_id": 4, "text": "## 3. Patent License You grant **OpenAI, Inc.** and all recipients of the Project a perpetual, worldwide, non‑exclusive, royalty‑free, irrevocable (except as below) patent license to make, have made, use, sell, offer to sell, import, and otherwise transfer Your Contributions alone or in combination with the Project.", "embedding": null}
{"id": "docs/CLA.md::chunk-5", "path": "docs/CLA.md", "chunk_id": 5, "text": "If any entity brings patent litigation alleging that the Project or a Contribution infringes a patent, the patent licenses granted by You to that entity under this CLA terminate.", "embedding": null}
{"id": "docs/CLA.md::chunk-6", "path": "docs/CLA.md", "chunk_id": 6, "text": "## 4. Representations 1. You are legally entitled to grant the licenses above. 2. Each Contribution is either Your original creation or You have authority to submit it under this CLA. 3. Your Contributions are provided **“AS IS”** without warranties of any kind. 4. You will notify the Project if any statement above becomes inaccurate.", "embedding": null}
{"id": "docs/CLA.md::chunk-7", "path": "docs/CLA.md", "chunk_id": 7, "text": "## 5. Miscellany This Agreement is governed by the laws of the **State of California**, USA, excluding its conflict‑of‑laws rules. If any provision is held unenforceable, the remaining provisions remain in force.", "embedding": null}
{"id": "docs/codex-gui.md::chunk-1", "path": "docs/codex-gui.md", "chunk_id": 1, "text": "## Отсылка к требованиям - REQ-UX-01 — «интерактивный опыт без когнитивной перегрузки» из `MaxThink-Stellar.md` реализуем через панель \"Insight Canvas\" с белой минималистичной темой. - REQ-ACC-01 — поддерживаем клавиатурную навигацию и доступность: каждый интерактивный элемент дублируется клавишами, цвета соответствуют WCAG AA. - REQ-DX-01 — ускоряем разработку: GUI переиспользует `codex_core::session` и шину событий TUI, предоставляя единый API.", "embedding": null}
{"id": "docs/codex-gui.md::chunk-2", "path": "docs/codex-gui.md", "chunk_id": 2, "text": "## Цели M0→M1 1. Вывести Codex из режима CLI/TUI в полноэкранное десктопное приложение (бинарь `codex-gui`). 2. Сохранить функциональный паритет с текущим TUI для сценария «чат + выполнение команд». 3. Обеспечить расширяемость: каждая панель UI = независимый модуль, которого можно тестировать автономно.", "embedding": null}
{"id": "docs/codex-gui.md::chunk-3", "path": "docs/codex-gui.md", "chunk_id": 3, "text": "## Ограничения - Не ломаем публичные контракты CLI/TUI. - Остаёмся в Rust-экосистеме, без Node/Chromium (приоритет производительности и размера). - Архитектура должна укладываться в Definition of Done для Workstream 0/1: unit + snapshot тесты, документированный пайплайн.", "embedding": null}
{"id": "docs/codex-gui.md::chunk-4", "path": "docs/codex-gui.md", "chunk_id": 4, "text": "## Архитектурный эскиз ``` +--------------------+ +------------------------+ | eframe::NativeOptions | | AppServiceHandle | | (тема, окна) | | - spawn_session() | +---------+----------+ | - send_prompt(...) | | | - stream_events(...) | v +-----------+------------+ +--------------------+ | | DesktopShell (UI) |<--------------------+ | - панель истории | | - редактор ввода | +----------------v----------------+ | - правый Inspector | | codex_core::session::Manager | | - командная шторка | | (существующая логика CLI/TUI) | +--------------------+ +--------------------------------+ ```", "embedding": null}
{"id": "docs/codex-gui.md::chunk-5", "path": "docs/codex-gui.md", "chunk_id": 5, "text": "### Интерфейс `AppServiceHandle` ```rust pub trait AppServiceHandle: Send + Sync { fn spawn_session(&self) -> eyre::Result<SessionId>; fn send_prompt(&self, session: SessionId, payload: PromptPayload) -> eyre::Result<()>; fn subscribe(&self, session: SessionId) -> eyre::Result<SessionStream>; fn list_history(&self, session: SessionId) -> eyre::Result<Vec<HistoryItem>>; } ``` Реализация по умолчанию — адаптер поверх `codex_core::session::Manager`, переиспользующий существующие тесты.", "embedding": null}
{"id": "docs/codex-gui.md::chunk-6", "path": "docs/codex-gui.md", "chunk_id": 6, "text": "### UI-слой - **Панель истории** — вертикальная лента карточек, каждая карточка = markdown View, стилизованная под белый Notion-блок. - **Composer** — многострочный редактор с подсветкой клавиатурных шорткатов (⌘⏎ / Ctrl⏎). - **Command Drawer** — выезжающее справа полотно с подсказками slash-команд. - **Insight Sidebar** — структурированная информация о текущем файле/контексте, повторяющая TUI Insight Canvas.", "embedding": null}
{"id": "docs/codex-gui.md::chunk-7", "path": "docs/codex-gui.md", "chunk_id": 7, "text": "## Потоки данных 1. Пользователь вводит промпт → `DesktopShell` вызывает `AppServiceHandle::send_prompt`. 2. Backend возвращает поток событий → UI подписан через канал, сообщения буферизуются в `HistoryModel`. 3. Сайдбар получает \"observability\" события (mcp, pipeline) и обновляет индикаторы.", "embedding": null}
{"id": "docs/codex-gui.md::chunk-8", "path": "docs/codex-gui.md", "chunk_id": 8, "text": "## Тестирование - `cargo test -p codex-gui` с юнитами на модель состояния и моками AppServiceHandle. - Снапшоты eframe через `eframe::epaint::ahash` стабильный дамп (TODO: codex-gui-snapshots). - `cargo run -p codex-gui -- --smoke` — headless прогон, убеждаемся, что окно поднимается < 120 мс.", "embedding": null}
{"id": "docs/codex-gui.md::chunk-9", "path": "docs/codex-gui.md", "chunk_id": 9, "text": "## Метрики - APDEX (латентность запуска окна) ≤ 180 мс. - Peak RAM ≤ 512 МБ (eframe + codex_core). - `Review Effort` ↓ ≥ 30% за счёт GUI (метрика из `stellar-vision`).", "embedding": null}
{"id": "docs/codex-gui.md::chunk-10", "path": "docs/codex-gui.md", "chunk_id": 10, "text": "## Открытые вопросы 1. Нужно ли выдавать offline-bundle ассетов? (пока откладываем). 2. Нужно ли тащить wasm для web-версии? (не в MVP). 3. Какие платформы считаем must-have? (приоритет macOS, Windows, Linux X11/Wayland).", "embedding": null}
{"id": "docs/codex-gui.md::chunk-11", "path": "docs/codex-gui.md", "chunk_id": 11, "text": "## Реализация MVP — 2025-09-19 - Добавлен workspace-крейт `codex-gui` с бинарём `codex-gui` (см. `codex-rs/gui/Cargo.toml`). - Изначально бекенд (`codex-rs/gui/src/backend/mod.rs`) работал на моковых данных, обеспечив API для интеграции с `codex_core::ConversationManager`. - UI (`codex-rs/gui/src/ui/mod.rs`) построен на `eframe/egui`: панель сессий, лента истории, белый composer с подсказками, Notion-подобное оформление. - `lib.rs` предоставляет `bootstrap()` для запуска eframe с белой темой, `main.rs` имеет режим `--dry-run-ui` для headless-проверок. - Юнит-тест `backend::tests::spawn_and_push_messages` проверяет моковый сценарий; smoke-тест размещён в `codex-rs/gui/tests/smoke.rs`. - Ограничение среды: команды `cargo check`/`run`/`test` завершались сигналом в песочнице CLI, ручная проверка требуется локально (см. раздел Validate).", "embedding": null}
{"id": "docs/codex-gui.md::chunk-12", "path": "docs/codex-gui.md", "chunk_id": 12, "text": "## GA Integration — 2025-09-19 - Реализован `CodexBackend` (`codex-rs/gui/src/backend/codex.rs`), подключающийся к `codex_core::ConversationManager` и проксирующий события Codex (сообщения, reasoning, команды). - Добавлен модуль `runtime` (`codex-rs/gui/src/runtime/mod.rs`), который поднимает `tokio`-runtime, загружает конфигурацию `Config::load_with_cli_overrides`, инициализирует `AuthManager` и создаёт production `AppServiceHandle`. - UI обрабатывает потоковые события: дельты ассистента, статусы задач, команды (`ExecCommand*`), отображая stdout/stderr в истории и статусы в отдельном баннере. - Composer по умолчанию создаёт свежую сессию и держит live-подключение к Codex, поддерживает Ctrl/⌘+Enter. - Семантический поиск документации доступен через `codex doc ...`, использует EmbeddingGemma (см. `scripts/docsearch`). - Для тестов сохранён моковый сервис `AppServiceHandle::mock()`; smoke-тест переключён на него для детерминированности.", "embedding": null}
{"id": "docs/codex-gui.md::chunk-13", "path": "docs/codex-gui.md", "chunk_id": 13, "text": "## Этап GA — задачи - Заменить моковый `AppServiceHandle` на адаптер `codex_core::ConversationManager`, обеспечив те же методы. - Инициализировать AuthManager/Config аналогично TUI (`codex-rs/tui/src/lib.rs`) и подключить telemetry. - Поддержать потоковую доставку событий (статусы выполнения, streaming ответов, tool usage) с подсветкой в UI. - Добавить панель команд/файловых операций (вписать slash-команды, просмотр git-диффов, запуск exec). - Настроить сохранение истории/rollout в `$CODEX_HOME/conversations` с возможностью быстрого доступа. - Обновить тесты: моковый backend оставить для unit, плюс контрактные тесты с `ConversationManager` под fake auth.", "embedding": null}
{"id": "docs/contributing.md::chunk-1", "path": "docs/contributing.md", "chunk_id": 1, "text": "If you want to add a new feature or change the behavior of an existing one, please open an issue proposing the feature and get approval from an OpenAI team member before spending time building it.", "embedding": null}
{"id": "docs/contributing.md::chunk-2", "path": "docs/contributing.md", "chunk_id": 2, "text": "**New contributions that don't go through this process may be closed** if they aren't aligned with our current roadmap or conflict with other priorities/upcoming features.", "embedding": null}
{"id": "docs/contributing.md::chunk-3", "path": "docs/contributing.md", "chunk_id": 3, "text": "- Create a _topic branch_ from `main` - e.g. `feat/interactive-prompt`. - Keep your changes focused. Multiple unrelated fixes should be opened as separate PRs. - Following the [development setup](#development-workflow) instructions above, ensure your change is free of lint warnings and test failures.", "embedding": null}
{"id": "docs/contributing.md::chunk-4", "path": "docs/contributing.md", "chunk_id": 4, "text": "1. **Start with an issue.** Open a new one or comment on an existing discussion so we can agree on the solution before code is written. 2. **Add or update tests.** Every new feature or bug-fix should come with test coverage that fails before your change and passes afterwards. 100% coverage is not required, but aim for meaningful assertions. 3. **Document behaviour.** If your change affects user-facing behaviour, update the README, inline help (`codex --help`), or relevant example projects. 4. **Keep commits atomic.** Each commit should compile and the tests should pass. This makes reviews and potential rollbacks easier.", "embedding": null}
{"id": "docs/contributing.md::chunk-5", "path": "docs/contributing.md", "chunk_id": 5, "text": "- Fill in the PR template (or include similar information) - **What? Why? How?** - Run **all** checks locally (`cargo test && cargo clippy --tests && cargo fmt -- --config imports_granularity=Item`). CI failures that could have been caught locally slow down the process. - Make sure your branch is up-to-date with `main` and that you have resolved merge conflicts. - Mark the PR as **Ready for review** only when you believe it is in a merge-able state.", "embedding": null}
{"id": "docs/contributing.md::chunk-6", "path": "docs/contributing.md", "chunk_id": 6, "text": "1. One maintainer will be assigned as a primary reviewer. 2. If your PR adds a new feature that was not previously discussed and approved, we may choose to close your PR (see [Contributing](#contributing)). 3. We may ask for changes - please do not take this personally. We value the work, but we also value consistency and long-term maintainability. 5. When there is consensus that the PR meets the bar, a maintainer will squash-and-merge.", "embedding": null}
{"id": "docs/contributing.md::chunk-7", "path": "docs/contributing.md", "chunk_id": 7, "text": "- **Be kind and inclusive.** Treat others with respect; we follow the [Contributor Covenant](https://www.contributor-covenant.org/). - **Assume good intent.** Written communication is hard - err on the side of generosity. - **Teach & learn.** If you spot something confusing, open an issue or PR with improvements.", "embedding": null}
{"id": "docs/contributing.md::chunk-8", "path": "docs/contributing.md", "chunk_id": 8, "text": "If you run into problems setting up the project, would like feedback on an idea, or just want to say _hi_ - please open a Discussion or jump into the relevant issue. We are happy to help.", "embedding": null}
{"id": "docs/contributing.md::chunk-9", "path": "docs/contributing.md", "chunk_id": 9, "text": "| Scenario | Command | | ----------------- | ------------------------------------------------ | | Amend last commit | `git commit --amend -s --no-edit && git push -f` |", "embedding": null}
{"id": "docs/contributing.md::chunk-10", "path": "docs/contributing.md", "chunk_id": 10, "text": "This will make a local commit on top of `main` with `version` set to `$VERSION` in `codex-rs/Cargo.toml` (note that on `main`, we leave the version as `version = \"0.0.0\"`).", "embedding": null}
{"id": "docs/contributing.md::chunk-11", "path": "docs/contributing.md", "chunk_id": 11, "text": "This will push the commit using the tag `rust-v${VERSION}`, which in turn kicks off [the release workflow](../.github/workflows/rust-release.yml). This will create a new GitHub Release named `$VERSION`.", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-1", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 1, "text": "1) Что подтверждено официально • Архитектура/размер/контекст/языки/выход и Matryoshka (768/512/256/128): EmbeddingGemma ≈300M параметров, контекст 2048 токенов, выход 768d с MRL-усечением до 512/256/128. (Источник: https://huggingface.co/google/embeddinggemma-300m , https://ai.google.dev/gemma/docs/embeddinggemma) • Лицензия: Gemma (разрешено ответственное коммерческое использование). (Источник: https://huggingface.co/google/embeddinggemma-300m) • Результаты: «высочайший рейтинг среди открытых мультиязычных моделей <500M на MTEB» (на момент релиза). (Источник: https://developers.googleblog.com/en/introducing-embeddinggemma/) • MRL требует повторной нормализации после усечения размерности. (Источник: https://huggingface.co/google/embeddinggemma-300m) • ВАЖНО: активации EmbeddingGemma НЕ поддерживают float16; используйте float32 или bfloat16. (Источник: https://huggingface.co/google/embeddinggemma-300m)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-2", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 2, "text": "2) Канонические промпты (используйте дословно) (Полный список и описания задач в карточке модели.) • Retrieval — запрос: task: search result | query: {{ваш_запрос}} (Источник: https://huggingface.co/google/embeddinggemma-300m) • Retrieval — документ с заголовком: title: {{заголовок}} | text: {{текст}} (Источник: https://huggingface.co/google/embeddinggemma-300m) • Retrieval — документ без заголовка: title: \"none\" | text: {{текст}} (Источник: https://huggingface.co/google/embeddinggemma-300m) • Другие задачи: classification / clustering / sentence similarity / fact checking / question answering / code retrieval — по форме task: … | query: {{текст}}. (Источник: https://huggingface.co/google/embeddinggemma-300m) • В Sentence Transformers лучше использовать encode_query()/encode_document() — они применяют корректные промпты/задачи автоматически для IR. (Источник: https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-3", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 3, "text": "3) Matryoshka (MRL): как резать размерность • Поддерживаемые размерности: 768 / 512 / 256 / 128. (Источник: https://huggingface.co/google/embeddinggemma-300m) • При усечении обязательно нормализуйте векторы (normalize_embeddings=True). (Источник: https://ai.google.dev/gemma/docs/embeddinggemma/inference-embeddinggemma-with-sentence-transformers , https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html) • Для поиска используйте inner product (dot) по нормализованным векторам; это эквивалент cosine и быстрее в FAISS. (Источник: https://github.com/facebookresearch/faiss/issues/95) • Практические дропы качества (MTEB Multilingual v2, Mean(Task)): 768d=61.15 → 512d=60.71 (−0.44), 256d=59.68 (−1.47), 128d=58.23 (−2.92). (Источник: https://huggingface.co/google/embeddinggemma-300m)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-4", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 4, "text": "4) Квантизация (QAT) • Доступные чекпойнты: Q4_0, Q8_0, Mixed (e4_a8_f4_p4) — минимальный дроп на MTEB. (Источник: https://huggingface.co/google/embeddinggemma-300m) • RAM <200MB с квантизацией (пример/оценка Google для on‑device). (Источник: https://developers.googleblog.com/en/introducing-embeddinggemma/)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-5", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 5, "text": "5) Типы чисел и устройства • Жёсткое правило: не использовать float16 (fp16). Выбирайте bfloat16 (GPU с BF16) или float32 (CPU/совместимый GPU). (Источник: https://huggingface.co/google/embeddinggemma-300m)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-6", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 6, "text": "6) Минимально корректная настройка RAG/поиска (фрагменты) # Инициализация ST с безопасным dtype from sentence_transformers import SentenceTransformer import torch device = \"cuda\" if torch.cuda.is_available() else \"cpu\" dtype = torch.bfloat16 if (device==\"cuda\" and torch.cuda.is_bf16_supported()) else torch.float32 model = SentenceTransformer(\"google/embeddinggemma-300m\", device=device, model_kwargs={\"torch_dtype\": dtype}) model.eval() # (Источник: https://huggingface.co/google/embeddinggemma-300m , https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-7", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 7, "text": "# Код для RAG с авто‑промптами q_emb = model.encode_query(user_query, normalize_embeddings=True) d_emb = model.encode_document(docs, normalize_embeddings=True) # (Источник: https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-8", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 8, "text": "# MRL‑усечение + нормализация emb = model.encode(texts, truncate_dim=512, normalize_embeddings=True, convert_to_numpy=True, batch_size=32, show_progress_bar=False) # (Источник: https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-9", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 9, "text": "# FAISS: inner product по нормализованным векторам ≡ cosine import faiss, numpy as np faiss.normalize_L2(emb) index = faiss.IndexFlatIP(emb.shape[1]) index.add(emb.astype(np.float32)) # (Источник: https://github.com/facebookresearch/faiss/issues/95)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-10", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 10, "text": "7) Рекомендованные продакшн‑профили (практика) • Баланс по умолчанию: 512‑d + нормализация + FAISS IP; батч 32 (GPU)/16 (CPU). (Производственный совет, источники по truncate_dim/нормализации: https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html) • Экономия памяти/edge: 256‑d или 128‑d + Q4_0; ожидаем небольшой дроп по таблице MTEB. (Источник таблицы: https://huggingface.co/google/embeddinggemma-300m) • Интеграции для сервинга: TEI 1.8.1+ и Workers AI. (Источник: https://huggingface.co/blog/embeddinggemma , https://developers.cloudflare.com/workers-ai/models/embeddinggemma-300m/)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-11", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 11, "text": "8) Sanity‑проверки (CI/health) • Промпты на месте (или используются encode_query/encode_document). (Источник: https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html , https://huggingface.co/google/embeddinggemma-300m) • Размерность эмбеддинга в данных и индексе совпадает (учёт truncate_dim). (Источник по truncate_dim: https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html) • Векторы нормализованы (норма ~1) при использовании dot/IP. (Источник: https://github.com/facebookresearch/faiss/issues/95) • Dtype ≠ fp16. (Источник: https://huggingface.co/google/embeddinggemma-300m)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-12", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 12, "text": "9) Fine‑tuning (Sentence Transformers) • Гайд по fine‑tuning EmbeddingGemma c ST: (Источник: https://ai.google.dev/gemma/docs/embeddinggemma/fine-tuning-embeddinggemma-with-sentence-transformers) • Используйте MultipleNegativesRankingLoss в связке с MatryoshkaLoss; обучающие триплеты (anchor, positive, negative). (Общее руководство по MRL/матрешке: https://sbert.net/examples/sentence_transformer/training/matryoshka/README.html)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-13", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 13, "text": "10) Интеграции и сервинг • Sentence Transformers — основной фреймворк инференса/обучения. (Источник: https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html) • TEI (Text Embeddings Inference) — сервинг EmbeddingGemma (v1.8.1+), есть готовые docker‑команды. (Источник: https://huggingface.co/blog/embeddinggemma , https://github.com/huggingface/text-embeddings-inference) • Workers AI (Cloudflare) — готовая модель @cf/google/embeddinggemma-300m. (Источник: https://developers.cloudflare.com/workers-ai/models/embeddinggemma-300m/ , https://developers.cloudflare.com/workers-ai/changelog/) • LiteRT / AI Edge RAG — он‑девайс сборки для Android/iOS. (Источник: https://huggingface.co/litert-community/embeddinggemma-300m)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-14", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 14, "text": "11) Частые ошибки и решения • «Слабый ретрив» при подаче текста без инструктивных промптов — добавьте промпт/используйте encode_query/encode_document. (Источник: https://ai.google.dev/gemma/docs/embeddinggemma/inference-embeddinggemma-with-sentence-transformers , https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html) • Ошибки с fp16 — у модели не поддержаны активации float16. (Источник: https://huggingface.co/google/embeddinggemma-300m) • Перепутаны query/document‑промпты — используйте специализированные методы ST. (Источник: https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-15", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 15, "text": "A) Безопасная загрузка и dtype from sentence_transformers import SentenceTransformer import torch device = \"cuda\" if torch.cuda.is_available() else \"cpu\" dtype = torch.bfloat16 if (device==\"cuda\" and torch.cuda.is_bf16_supported()) else torch.float32 model = SentenceTransformer(\"google/embeddinggemma-300m\", device=device, model_kwargs={\"torch_dtype\": dtype}) model.eval() # (Источник: https://huggingface.co/google/embeddinggemma-300m)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-16", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 16, "text": "B) RAG с авто‑промптами q_emb = model.encode_query(user_query, normalize_embeddings=True) d_emb = model.encode_document(docs, normalize_embeddings=True) # (Источник: https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-17", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 17, "text": "C) MRL‑усечение + нормализация emb = model.encode(texts, truncate_dim=512, normalize_embeddings=True, convert_to_numpy=True) # (Источник: https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-18", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 18, "text": "D) FAISS: inner product = cosine при нормализации import faiss, numpy as np faiss.normalize_L2(emb) index = faiss.IndexFlatIP(emb.shape[1]) index.add(emb.astype(np.float32)) # (Источник: https://github.com/facebookresearch/faiss/issues/95)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-19", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 19, "text": "13) Быстрая таблица для агента (ключ→значение→источник) • MODEL_ID: google/embeddinggemma-300m — https://huggingface.co/google/embeddinggemma-300m • EMBED_DIM: 512 (баланс) — таблица MRL/дропов: https://huggingface.co/google/embeddinggemma-300m • DTYPE: bf16 (GPU) / f32 (CPU), не fp16 — https://huggingface.co/google/embeddinggemma-300m • NORMALIZE: true — https://ai.google.dev/gemma/docs/embeddinggemma/inference-embeddinggemma-with-sentence-transformers • SIM_METRIC: dot (FAISS IP по нормализованным векторам ≡ cosine) — https://github.com/facebookresearch/faiss/issues/95 • PROMPTS: обязателен инструктивный префикс или encode_query/encode_document — https://huggingface.co/google/embeddinggemma-300m , https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html • QAT: Q8_0 (минимальный дроп) или Q4_0 — https://huggingface.co/google/embeddinggemma-300m", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-20", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 20, "text": "14) Контрольные инварианты (CI) • Проверка наличия \"task:\"/ \"title:\"/ \"text:\" или использование encode_query/encode_document. (Источник: https://huggingface.co/google/embeddinggemma-300m , https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html) • Согласованность размерностей с индексом (учёт truncate_dim). (Источник: https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html) • Нормализация векторов при использовании dot/IP. (Источник: https://github.com/facebookresearch/faiss/issues/95) • Отсутствие fp16. (Источник: https://huggingface.co/google/embeddinggemma-300m)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-21", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 21, "text": "15) Производительность/ресурсы (официальные ориентиры) • «Может работать при <200MB RAM с квантизацией (on‑device)» — заявление Google. (Источник: https://developers.googleblog.com/en/introducing-embeddinggemma/)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-22", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 22, "text": "16) Точки интеграции • Workers AI (Cloudflare): модель @cf/google/embeddinggemma-300m. (Источник: https://developers.cloudflare.com/workers-ai/models/embeddinggemma-300m/ , https://developers.cloudflare.com/workers-ai/changelog/) • TEI (HF): поддержка EmbeddingGemma (v1.8.1+) + docker‑команды. (Источник: https://huggingface.co/blog/embeddinggemma , https://github.com/huggingface/text-embeddings-inference) • LiteRT / AI Edge RAG: мобильные варианты. (Источник: https://huggingface.co/litert-community/embeddinggemma-300m)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-23", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 23, "text": "17) Качество на ваших данных — быстрая методика • Создать «золотой» набор (запрос→релевантные документы). • Прогнать профили 768/512/256/128 и FP32/BF16/Q8_0/Q4_0; выбрать профиль по recall@k и nDCG@k. (Источник по таблицам MRL/QAT: https://huggingface.co/google/embeddinggemma-300m) • При необходимости добавить лёгкий cross‑encoder/reranker.", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-24", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 24, "text": "19) Короткий чек‑лист «в бой» • MODEL_ID=google/embeddinggemma-300m (Источник: https://huggingface.co/google/embeddinggemma-300m) • DTYPE=bf16|f32 (не fp16) (Источник: https://huggingface.co/google/embeddinggemma-300m) • EMBED_DIM=512, NORMALIZE=true, SIM=dot/IP (≡ cosine при нормализации) (Источник: https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html , https://github.com/facebookresearch/faiss/issues/95) • Использовать encode_query / encode_document или строгие промпты (Источник: https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html , https://huggingface.co/google/embeddinggemma-300m) • QAT при нехватке памяти: Q8_0 (минимальный дроп) или Q4_0 (Источник: https://huggingface.co/google/embeddinggemma-300m)", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-25", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 25, "text": "20) Список ключевых источников (быстрые ссылки) • HF модель и промпты, MRL/QAT таблицы, запрет fp16: https://huggingface.co/google/embeddinggemma-300m • Обзор Google (308M, <200MB с квантизацией, on‑device): https://developers.googleblog.com/en/introducing-embeddinggemma/ • Обзор/спека EmbeddingGemma (Google AI Dev): https://ai.google.dev/gemma/docs/embeddinggemma • ST API (encode_query/document, normalize_embeddings, truncate_dim): https://sbert.net/docs/package_reference/sentence_transformer/SentenceTransformer.html • MRL/усечение в ST: https://sbert.net/examples/sentence_transformer/training/matryoshka/README.html • Рекомендация добавить «instructional prompt» для best embeddings: https://ai.google.dev/gemma/docs/embeddinggemma/inference-embeddinggemma-with-sentence-transformers • FAISS: IP по нормализованным векторам эквивалентен cosine: https://github.com/facebookresearch/faiss/issues/95 • TEI (блог HF) + репозиторий: https://huggingface.co/blog/embeddinggemma , https://github.com/huggingface/text-embeddings-inference • Workers AI (Cloudflare) — модель: https://developers.cloudflare.com/workers-ai/models/embeddinggemma-300m/ • LiteRT/AI Edge RAG сборки: https://huggingface.co/litert-community/embeddinggemma-300m", "embedding": null}
{"id": "docs/EmbeddingGemma-300M-context-ru.txt::chunk-26", "path": "docs/EmbeddingGemma-300M-context-ru.txt", "chunk_id": 26, "text": "────────────────────────────────────────────────────────────────────────────── Примечание: числа и формулировки взяты из официальных страниц на момент сентября 2025. Проверяйте актуальность при обновлениях.", "embedding": null}
{"id": "docs/experimental.md::chunk-1", "path": "docs/experimental.md", "chunk_id": 1, "text": "Codex CLI is an experimental project under active development. It is not yet stable, may contain bugs, incomplete features, or undergo breaking changes. We're building it in the open with the community and welcome:", "embedding": null}
{"id": "docs/faq.md::chunk-1", "path": "docs/faq.md", "chunk_id": 1, "text": "In 2021, OpenAI released Codex, an AI system designed to generate code from natural language prompts. That original Codex model was deprecated as of March 2023 and is separate from the CLI tool.", "embedding": null}
{"id": "docs/faq.md::chunk-2", "path": "docs/faq.md", "chunk_id": 2, "text": "We recommend using Codex with GPT-5, our best coding model. The default reasoning level is medium, and you can upgrade to high for complex tasks with the `/model` command.", "embedding": null}
{"id": "docs/faq.md::chunk-3", "path": "docs/faq.md", "chunk_id": 3, "text": "It's possible that your [API account needs to be verified](https://help.openai.com/en/articles/10910291-api-organization-verification) in order to start streaming responses and seeing chain of thought summaries from the API. If you're still running into issues, please let us know!", "embedding": null}
{"id": "docs/faq.md::chunk-4", "path": "docs/faq.md", "chunk_id": 4, "text": "By default, Codex can modify files in your current working directory (Auto mode). To prevent edits, run `codex` in read-only mode with the CLI flag `--sandbox read-only`. Alternatively, you can change the approval level mid-conversation with `/approvals`.", "embedding": null}
{"id": "docs/faq.md::chunk-5", "path": "docs/faq.md", "chunk_id": 5, "text": "Running Codex directly on Windows may work, but is not officially supported. We recommend using [Windows Subsystem for Linux (WSL2)](https://learn.microsoft.com/en-us/windows/wsl/install).", "embedding": null}
{"id": "docs/getting-started.md::chunk-1", "path": "docs/getting-started.md", "chunk_id": 1, "text": "| Command | Purpose | Example | | ------------------ | ---------------------------------- | ------------------------------- | | `codex` | Interactive TUI | `codex` | | `codex \"...\"` | Initial prompt for interactive TUI | `codex \"fix lint errors\"` | | `codex exec \"...\"` | Non-interactive \"automation mode\" | `codex exec \"explain utils.ts\"` | | `codex doc search` | Semantic lookup in docs | `codex doc search \"how to login\"` |", "embedding": null}
{"id": "docs/getting-started.md::chunk-2", "path": "docs/getting-started.md", "chunk_id": 2, "text": "- Run `codex resume` to display the session picker UI - Resume most recent: `codex resume --last` - Resume by id: `codex resume <SESSION_ID>` (You can get session ids from /status or `~/.codex/sessions/`)", "embedding": null}
{"id": "docs/getting-started.md::chunk-3", "path": "docs/getting-started.md", "chunk_id": 3, "text": "That's it - Codex will scaffold a file, run it inside a sandbox, install any missing dependencies, and show you the live result. Approve the changes and they'll be committed to your working directory.", "embedding": null}
{"id": "docs/getting-started.md::chunk-4", "path": "docs/getting-started.md", "chunk_id": 4, "text": "| ✨ | What you type | What happens | | --- | ------------------------------------------------------------------------------- | -------------------------------------------------------------------------- | | 1 | `codex \"Refactor the Dashboard component to React Hooks\"` | Codex rewrites the class component, runs `npm test`, and shows the diff. | | 2 | `codex \"Generate SQL migrations for adding a users table\"` | Infers your ORM, creates migration files, and runs them in a sandboxed DB. | | 3 | `codex \"Write unit tests for utils/date.ts\"` | Generates tests, executes them, and iterates until they pass. | | 4 | `codex \"Bulk-rename *.jpeg -> *.jpg with git mv\"` | Safely renames files and updates imports/usages. | | 5 | `codex \"Explain what this regex does: ^(?=.*[A-Z]).{8,}$\"` | Outputs a step-by-step human explanation. | | 6 | `codex \"Carefully review this repo, and propose 3 high impact well-scoped PRs\"` | Suggests impactful PRs in the current codebase. | | 7 | `codex \"Look for vulnerabilities and create a security review report\"` | Finds and explains security bugs. |", "embedding": null}
{"id": "docs/getting-started.md::chunk-5", "path": "docs/getting-started.md", "chunk_id": 5, "text": "You can give Codex extra instructions and guidance using `AGENTS.md` files. Codex looks for `AGENTS.md` files in the following places, and merges them top-down:", "embedding": null}
{"id": "docs/getting-started.md::chunk-6", "path": "docs/getting-started.md", "chunk_id": 6, "text": "1. `~/.codex/AGENTS.md` - personal global guidance 2. `AGENTS.md` at repo root - shared project notes 3. `AGENTS.md` in the current working directory - sub-folder/feature specifics", "embedding": null}
{"id": "docs/getting-started.md::chunk-7", "path": "docs/getting-started.md", "chunk_id": 7, "text": "Typing `@` triggers a fuzzy-filename search over the workspace root. Use up/down to select among the results and Tab or Enter to replace the `@` with the selected path. You can use Esc to cancel the search.", "embedding": null}
{"id": "docs/getting-started.md::chunk-8", "path": "docs/getting-started.md", "chunk_id": 8, "text": "When the MCP manager or wizard is open, press `f` to launch the workspace-aware file browser. Use the arrow keys to navigate, `→` to enter directories, and `Enter` to select the highlighted path; this pre-fills the wizard's **Source path** field for automatic intake.", "embedding": null}
{"id": "docs/getting-started.md::chunk-9", "path": "docs/getting-started.md", "chunk_id": 9, "text": "Paste images directly into the composer (Ctrl+V / Cmd+V) to attach them to your prompt. You can also attach files via the CLI using `-i/--image` (comma‑separated):", "embedding": null}
{"id": "docs/getting-started.md::chunk-10", "path": "docs/getting-started.md", "chunk_id": 10, "text": "When the chat composer is empty, press Esc to prime “backtrack” mode. Press Esc again to open a transcript preview highlighting the last user message; press Esc repeatedly to step to older user messages. Press Enter to confirm and Codex will fork the conversation from that point, trim the visible transcript accordingly, and pre‑fill the composer with the selected user message so you can edit and resubmit it.", "embedding": null}
{"id": "docs/getting-started.md::chunk-11", "path": "docs/getting-started.md", "chunk_id": 11, "text": "Press `Ctrl+O` to open the Stellar Observability Overlay (REQ-OBS-01/REQ-OPS-01; see `docs/future/MaxThink-Stellar.md`). The overlay highlights latency p95, audit fallback count, and cache hit percentage, and surfaces an `[ Investigate ]` hint that maps to persona-specific runbooks. For a deeper walkthrough, follow [docs/stellar-quickstart.md](stellar-quickstart.md).", "embedding": null}
{"id": "docs/getting-started.md::chunk-12", "path": "docs/getting-started.md", "chunk_id": 12, "text": "```shell export CODEX_PIPELINE_SIGNING_KEY=\"<base64url-ed25519-secret>\" codex pipeline sign --name insight --version 1.4.0 --source packs/insight --signer vault:pipeline/insight codex pipeline verify dist/insight-1.4.0.tar.gz --expect-fingerprint <fingerprint> --install codex pipeline rollback insight 1.3.5 ```", "embedding": null}
{"id": "docs/getting-started.md::chunk-13", "path": "docs/getting-started.md", "chunk_id": 13, "text": "`sign` writes the bundle + manifest into `$CODEX_HOME/pipeline` and records an immutable audit event, `verify` validates the signature/diff (optionally installing the payload), and `rollback` reactivates a previously installed version. See the signed pipeline quickstart for validation steps and traceability requirements.", "embedding": null}
{"id": "docs/getting-started.md::chunk-14", "path": "docs/getting-started.md", "chunk_id": 14, "text": "Targets can be tuned via `--apdex-target`, `--latency-target-ms`, `--audit-target`, and `--review-target-hours`. Archive the output in `docs/future/stellar/metrics-baseline.md` and update the weekly checklist when the command highlights yellow/red statuses.", "embedding": null}
{"id": "docs/getting-started.md::chunk-15", "path": "docs/getting-started.md", "chunk_id": 15, "text": "Sometimes it is not convenient to `cd` to the directory you want Codex to use as the \"working root\" before running Codex. Fortunately, `codex` supports a `--cd` option so you can specify whatever folder you want. You can confirm that Codex is honoring `--cd` by double-checking the **workdir** it reports in the TUI at the start of a new session.", "embedding": null}
{"id": "docs/install.md::chunk-1", "path": "docs/install.md", "chunk_id": 1, "text": "| Requirement | Details | | --------------------------- | --------------------------------------------------------------- | | Operating systems | macOS 12+, Ubuntu 20.04+/Debian 10+, or Windows 11 **via WSL2** | | Git (optional, recommended) | 2.23+ for built-in PR helpers | | RAM | 4-GB minimum (8-GB recommended) |", "embedding": null}
{"id": "docs/install.md::chunk-2", "path": "docs/install.md", "chunk_id": 2, "text": "The GitHub Release also contains a [DotSlash](https://dotslash-cli.com/) file for the Codex CLI named `codex`. Using a DotSlash file makes it possible to make a lightweight commit to source control to ensure all contributors use the same version of an executable, regardless of what platform they use for development.", "embedding": null}
{"id": "docs/install.md::chunk-3", "path": "docs/install.md", "chunk_id": 3, "text": "# Install the Rust toolchain, if necessary. curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y source \"$HOME/.cargo/env\" rustup component add rustfmt rustup component add clippy", "embedding": null}
{"id": "docs/install.md::chunk-4", "path": "docs/install.md", "chunk_id": 4, "text": "The `make build` recipe runs `cargo build --release` for both `x86_64-unknown-linux-gnu` and `x86_64-pc-windows-gnu`, placing the resulting artifacts in `dist/`. Ensure the corresponding Rust targets (`rustup target add …`) are available before running the command.", "embedding": null}
{"id": "docs/platform-sandboxing.md::chunk-1", "path": "docs/platform-sandboxing.md", "chunk_id": 1, "text": "- **macOS 12+** uses **Apple Seatbelt** and runs commands using `sandbox-exec` with a profile (`-p`) that corresponds to the `--sandbox` that was specified. - **Linux** uses a combination of Landlock/seccomp APIs to enforce the `sandbox` configuration.", "embedding": null}
{"id": "docs/platform-sandboxing.md::chunk-2", "path": "docs/platform-sandboxing.md", "chunk_id": 2, "text": "Note that when running Linux in a containerized environment such as Docker, sandboxing may not work if the host/container configuration does not support the necessary Landlock/seccomp APIs. In such cases, we recommend configuring your Docker container so that it provides the sandbox guarantees you are looking for and then running `codex` with `--sandbox danger-full-access` (or, more simply, the `--dangerously-bypass-approvals-and-sandbox` flag) within your container.", "embedding": null}
{"id": "docs/prompts.md::chunk-1", "path": "docs/prompts.md", "chunk_id": 1, "text": "- Location: Put files in `$CODEX_HOME/prompts/` (defaults to `~/.codex/prompts/`). - File type: Only Markdown files with the `.md` extension are recognized. - Name: The filename without the `.md` extension becomes the slash entry. For a file named `my-prompt.md`, type `/my-prompt`. - Content: The file contents are sent as your message when you select the item in the slash popup and press Enter. - How to use: - Start a new session (Codex loads custom prompts on session start). - In the composer, type `/` to open the slash popup and begin typing your prompt name. - Use Up/Down to select it. Press Enter to submit its contents, or Tab to autocomplete the name. - Notes: - Files with names that collide with built‑in commands (e.g. `/init`) are ignored and won’t appear. - New or changed files are discovered on session start. If you add a new prompt while Codex is running, start a new session to pick it up.", "embedding": null}
{"id": "docs/release_management.md::chunk-1", "path": "docs/release_management.md", "chunk_id": 1, "text": "- GitHub Releases https://github.com/openai/codex/releases/ - `@openai/codex` on npm: https://www.npmjs.com/package/@openai/codex - `codex` on Homebrew: https://formulae.brew.sh/formula/codex", "embedding": null}
{"id": "docs/release_management.md::chunk-2", "path": "docs/release_management.md", "chunk_id": 2, "text": "Run the `codex-rs/scripts/create_github_release` script in the repository to publish a new release. The script will choose the appropriate version number depending on the type of release you are creating.", "embedding": null}
{"id": "docs/release_management.md::chunk-3", "path": "docs/release_management.md", "chunk_id": 3, "text": "Running the publishing script will kick off a GitHub Action to build the release, so go to https://github.com/openai/codex/actions/workflows/rust-release.yml to find the corresponding workflow. (Note: we should automate finding the workflow URL with `gh`.)", "embedding": null}
{"id": "docs/release_management.md::chunk-4", "path": "docs/release_management.md", "chunk_id": 4, "text": "For Homebrew, we are properly set up with their automation system, so every few hours or so it will check our GitHub repo to see if there is a new release. When it finds one, it will put up a PR to create the equivalent Homebrew release, which entails building Codex CLI from source on various versions of macOS.", "embedding": null}
{"id": "docs/release_management.md::chunk-5", "path": "docs/release_management.md", "chunk_id": 5, "text": "Once everything builds, a Homebrew admin has to approve the PR. Again, the whole process takes several hours and we don't have total control over it, but it seems to work pretty well.", "embedding": null}
{"id": "docs/sandbox.md::chunk-1", "path": "docs/sandbox.md", "chunk_id": 1, "text": "We've chosen a powerful default for how Codex works on your computer: `Auto`. In this approval mode, Codex can read files, make edits, and run commands in the working directory automatically. However, Codex will need your approval to work outside the working directory or access network.", "embedding": null}
{"id": "docs/sandbox.md::chunk-2", "path": "docs/sandbox.md", "chunk_id": 2, "text": "If you need Codex to read files, make edits, and run commands with network access, without approval, you can use `Full Access`. Exercise caution before doing so.", "embedding": null}
{"id": "docs/sandbox.md::chunk-3", "path": "docs/sandbox.md", "chunk_id": 3, "text": "- Codex runs in a sandbox by default with strong guardrails: it prevents editing files outside the workspace and blocks network access unless enabled. - On launch, Codex detects whether the folder is version-controlled and recommends: - Version-controlled folders: `Auto` (workspace write + on-request approvals) - Non-version-controlled folders: `Read Only` - The workspace includes the current directory and temporary directories like `/tmp`. Use the `/status` command to see which directories are in the workspace. - You can set these explicitly: - `codex --sandbox workspace-write --ask-for-approval on-request` - `codex --sandbox read-only --ask-for-approval on-request`", "embedding": null}
{"id": "docs/sandbox.md::chunk-4", "path": "docs/sandbox.md", "chunk_id": 4, "text": "Yes, you can disable all approval prompts with `--ask-for-approval never`. This option works with all `--sandbox` modes, so you still have full control over Codex's level of autonomy. It will make its best attempt with whatever contrainsts you provide.", "embedding": null}
{"id": "docs/sandbox.md::chunk-5", "path": "docs/sandbox.md", "chunk_id": 5, "text": "| Intent | Flags | Effect | | --------------------------------------- | ----------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------- | | Safe read-only browsing | `--sandbox read-only --ask-for-approval on-request` | Codex can read files and answer questions. Codex requires approval to make edits, run commands, or access network. | | Read-only non-interactive (CI) | `--sandbox read-only --ask-for-approval never` | Reads only; never escalates | | Let it edit the repo, ask if risky | `--sandbox workspace-write --ask-for-approval on-request` | Codex can read files, make edits, and run commands in the workspace. Codex requires approval for actions outside the workspace or for network access. | | Auto (preset) | `--full-auto` (equivalent to `--sandbox workspace-write` + `--ask-for-approval on-failure`) | Codex can read files, make edits, and run commands in the workspace. Codex requires approval when a sandboxed command fails or needs escalation.", "embedding": null}
{"id": "docs/sandbox.md::chunk-6", "path": "docs/sandbox.md", "chunk_id": 6, "text": "- **macOS 12+** uses **Apple Seatbelt** and runs commands using `sandbox-exec` with a profile (`-p`) that corresponds to the `--sandbox` that was specified. - **Linux** uses a combination of Landlock/seccomp APIs to enforce the `sandbox` configuration.", "embedding": null}
{"id": "docs/sandbox.md::chunk-7", "path": "docs/sandbox.md", "chunk_id": 7, "text": "Note that when running Linux in a containerized environment such as Docker, sandboxing may not work if the host/container configuration does not support the necessary Landlock/seccomp APIs. In such cases, we recommend configuring your Docker container so that it provides the sandbox guarantees you are looking for and then running `codex` with `--sandbox danger-full-access` (or, more simply, the `--dangerously-bypass-approvals-and-sandbox` flag) within your container.", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-1", "path": "docs/stellar-quickstart.md", "chunk_id": 1, "text": "Trace: REQ-OBS-01, REQ-OPS-01 (see `docs/future/MaxThink-Stellar.md` §\"Observability & SRE Controls\") · aligns with `docs/future/stellar-tui-vision.md` overlay narrative (#8, #20).", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-2", "path": "docs/stellar-quickstart.md", "chunk_id": 2, "text": "## Plan - Confirm telemetry storage path (`$CODEX_HOME/telemetry`) is writable; OTLP/Prom endpoints optional. - Capture current METRIC-LATENCY p95 baseline (table in `docs/future/stellar/metrics-baseline.md`). - Decide persona focus (Operator, SRE, SecOps, Platform, Partner, Assistive) to tailor investigate hints.", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-3", "path": "docs/stellar-quickstart.md", "chunk_id": 3, "text": "## Build - Launch TUI (`codex`) and press `Ctrl+O` to toggle the Observability Overlay. - Read latency/audit/cache indicators in the status bar (color-coded, `StatusBar` widget; REQ-OBS-01). - From the overlay, use `[ Investigate ]` hint → `Ctrl+R` to open persona-specific runbooks (REQ-OPS-01). - Configure OTLP export by setting `CODEX_TELEMETRY_OTLP_ENDPOINT` and optional `CODEX_TELEMETRY_OTLP_HEADERS` (Sigstore/Vault ready). - Expose Prometheus metrics by setting `CODEX_TELEMETRY_PROMETHEUS_ADDR=127.0.0.1:9464` (sled-backed buffer ensures no data loss offline).", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-4", "path": "docs/stellar-quickstart.md", "chunk_id": 4, "text": "## Validate - `cargo test -p codex-tui stellar::ctrl_o_toggles_telemetry_overlay` (ensures UI toggle + snapshot coverage). - `cargo test -p codex-core telemetry_exporter::tests::` (OTLP flush + Prometheus endpoint smoke per REQ-OBS-01/REQ-OPS-01). - Record updated latency/audit/cache readings post-run in `docs/future/stellar/metrics-baseline.md` (target p95 ≤ 200 мс, METRIC-AUDIT-OK ≥ 95%).", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-5", "path": "docs/stellar-quickstart.md", "chunk_id": 5, "text": "Trace: REQ-OPS-01, REQ-INT-01, REQ-DX-01 (ref. `docs/rfcs/0005-stellar-delivery.md`, `docs/future/stellar/adrs/adr-del-001.md`). Implements Workstream 5 checklist.", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-6", "path": "docs/stellar-quickstart.md", "chunk_id": 6, "text": "## Plan - Export/seed `CODEX_PIPELINE_SIGNING_KEY` with a base64url Ed25519 secret (Vault integration ready). Document signer alias (e.g. `vault:pipeline/insight`) and required approval chain. - Define semantic versioning policy (`MAJOR.MINOR.PATCH`) and rollback matrix for each knowledge pack. - Ensure audit ledger writable (`$CODEX_HOME/audit-ledger`) and pipeline store baseline (`$CODEX_HOME/pipeline`) has 1.5× free disk space of bundle size.", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-7", "path": "docs/stellar-quickstart.md", "chunk_id": 7, "text": "## Build - Подпишите knowledge pack каталог: - ``codex pipeline sign --name insight --version 1.4.0 --source packs/insight --signer vault:pipeline/insight`` → bundle и манифест появляются в `$CODEX_HOME/pipeline` + аудит `supply_chain` (REQ-OPS-01). - Проверьте и установите бандл на приёмнике: - ``codex pipeline verify dist/insight-1.4.0.tar.gz --expect-fingerprint <HEX> --install`` → валидация подписи, дифф к активной версии, развёртывание в `installed/` (REQ-INT-01). - При необходимости откатитесь: - ``codex pipeline rollback insight 1.3.5`` → смещает активную версию, фиксируя событие в immutable audit ledger (REQ-DX-01).", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-8", "path": "docs/stellar-quickstart.md", "chunk_id": 8, "text": "## Validate - `cargo test -p codex-core pipeline::tests::sign_verify_install_and_rollback_flow` (unit coverage sign/verify/rollback, bundle diff). - `cargo test -p codex-cli` (CLI smoke; автоматическая проверка парсинга и вывода новых подкоманд). - Док-трейс: обновите `docs/future/stellar/metrics-baseline.md` (раздел Delivery) фактами по bundle fingerprint/rollback, заархивируйте diff в fast-review пакете и отметьте прогресс в `todo.md` (Workstream 5, оба агента).", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-9", "path": "docs/stellar-quickstart.md", "chunk_id": 9, "text": "## Plan - Зафиксируйте целевые значения: APDEX ≥ 0.85, latency p95 ≤ 200 мс, audit fallback = 0, review effort ≤ 4.5 ч. - Перед запуском убедитесь, что TelemetryHub содержит свежие снапшоты (прогоните представительные команды/тесты).", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-10", "path": "docs/stellar-quickstart.md", "chunk_id": 10, "text": "## Build - Сгенерируйте еженедельный отчёт: ``codex orchestrator triage --persona operator --review-hours 5.0`` — команда выводит статус по каждому метрику и предлагает обновления чеклистов. - При необходимости скорректируйте цели (`--apdex-target`, `--latency-target-ms`, `--audit-target`, `--review-target-hours`). - Зафиксируйте изменения чеклистов/действий в governance portal и `todo.md`.", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-11", "path": "docs/stellar-quickstart.md", "chunk_id": 11, "text": "## Validate - Архивируйте вывод triage в `docs/future/stellar/metrics-baseline.md` (раздел Continuous Quality) и отметьте чекбокс в `todo.md`. - При статусе Yellow/Red запланируйте `codex orchestrator investigate` и добавьте action items в weekly review.", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-12", "path": "docs/stellar-quickstart.md", "chunk_id": 12, "text": "## Plan - Убедитесь, что `rustup` настроен на toolchain 2024 (`rustup show active-toolchain`). - Подготовьте чистую рабочую директорию (`git status` без незакоммиченных правок) и отключите внешние окна — eframe запускает нативное приложение. - Выполните `cargo run -p codex-gui -- --dry-run-ui` — проверяет, что runtime и конфигурация собираются без открытия окна. - Убедитесь, что авторизация Codex активна (`codex login status` или `codex login` при необходимости).", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-13", "path": "docs/stellar-quickstart.md", "chunk_id": 13, "text": "## Build - `cargo run -p codex-gui` — запускает белый минималистичный интерфейс с live-подключением к Codex. - В интерфейсе создайте/откройте сессию, отправьте промпт (⌘/Ctrl + Enter) и дождитесь потокового ответа ассистента. - Запустите команду из подсказки (например, попросите проанализировать `git status`) и убедитесь, что stdout/stderr появляются в истории с пометками. - Проверьте визуальные элементы: белый фон, подсказки горячих клавиш, статус-баннеры, плавные карточки.", "embedding": null}
{"id": "docs/stellar-quickstart.md::chunk-14", "path": "docs/stellar-quickstart.md", "chunk_id": 14, "text": "## Validate - `cargo test -p codex-gui` (smoke `tests/smoke.rs` + backend unit). - `cargo fmt -p codex-gui` (форматирование перед PR) или `just fmt` для всего workspace. - На окружении Codex CLI команды `cargo` могут завершаться сигналом; при локальной проверке убедитесь, что окно поднимается < 200 мс, RAM < 512 МБ, а команды/ответы транслируются без задержек > 1 с.", "embedding": null}
{"id": "docs/zdr.md::chunk-1", "path": "docs/zdr.md", "chunk_id": 1, "text": "Codex CLI natively supports OpenAI organizations with [Zero Data Retention (ZDR)](https://platform.openai.com/docs/guides/your-data#zero-data-retention) enabled.", "embedding": null}
{"id": "docs/future/index.md::chunk-1", "path": "docs/future/index.md", "chunk_id": 1, "text": "## Workstream 0 Artifacts (2025-09-18) - Alignment Brief: [stellar/alignment.md](stellar/alignment.md) - Backlog Trace: [stellar/backlog.md](stellar/backlog.md) - Definition of Done: [stellar/definition-of-done.md](stellar/definition-of-done.md) - Metrics Baseline: [stellar/metrics-baseline.md](stellar/metrics-baseline.md) - Review Log & Risk Register: [stellar/review-log.md](stellar/review-log.md) - RFC/ADR Template: [stellar/rfc-adr-template.md](stellar/rfc-adr-template.md)", "embedding": null}
{"id": "docs/future/index.md::chunk-2", "path": "docs/future/index.md", "chunk_id": 2, "text": "## Workstream 2 Artifacts (2025-09-18) - Stellar Resilience Plan: [stellar/m2-resilience-plan.md](stellar/m2-resilience-plan.md) - Chaos Validation Log: [stellar/chaos-log-20250918.md](stellar/chaos-log-20250918.md) - Chaos & Bench Harness: [`core/tests/resilience_chaos.rs`](../../codex-rs/core/tests/resilience_chaos.rs), [`core/benches/resilience_prefetch.rs`](../../codex-rs/core/benches/resilience_prefetch.rs)", "embedding": null}
{"id": "docs/future/index.md::chunk-3", "path": "docs/future/index.md", "chunk_id": 3, "text": "## RFCs Accepted for Draft Review - [RFC 0002: Stellar Core Kernel](../rfcs/0002-stellar-core-kernel.md) - [RFC 0003: Stellar Resilience & Data Intelligence](../rfcs/0003-stellar-resilience.md) - [RFC 0004: Stellar Security & Sandbox Hardening](../rfcs/0004-stellar-security.md) - [RFC 0005: Stellar Delivery & Governance](../rfcs/0005-stellar-delivery.md)", "embedding": null}
{"id": "docs/future/index.md::chunk-4", "path": "docs/future/index.md", "chunk_id": 4, "text": "## ADR Drafts - [ADR-CORE-001](stellar/adrs/adr-core-001.md) - [ADR-RES-001](stellar/adrs/adr-res-001.md) - [ADR-SEC-001](stellar/adrs/adr-sec-001.md) - [ADR-DEL-001](stellar/adrs/adr-del-001.md)", "embedding": null}
{"id": "docs/future/index.md::chunk-5", "path": "docs/future/index.md", "chunk_id": 5, "text": "## Next Steps - Proceed to M1 (Stellar Core Kernel) using artifacts above as authoritative baseline. - Keep this index updated when new RFCs/ADRs move stages or additional workstream documents are added.", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-1", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 1, "text": "## SPEC ↔ Solution Map | REQ | Решение | Идеи | Метрики | | --- | --- | --- | --- | | REQ-UX-01 | Навигация через Stellar TUI Core kernel и Command Router с интеллектуальным автодополнением | #1, #2, #50 | METRIC-APDEX, METRIC-CSAT | | REQ-UX-02 | FlexGrid адаптивные макеты + определения возможностей терминала + сценарные дашборды | #4, #63, #53 | METRIC-APDEX, METRIC-CSAT | | REQ-ACC-01 | Screen Reader Bridge, High-Contrast пак и палитры для дальтонизма | #6, #62, #87 | METRIC-CSAT | | REQ-SEC-01 | RBAC фильтрация, Secure Command Signing, Session Timeout, Security Banner | #11, #9, #74, #70 | METRIC-SEC-INC | | REQ-SEC-02 | Immutable Audit Ledger, Audit Export, Contextual Audit Flags | #10, #38, #57 | METRIC-AUDIT-OK | | REQ-SEC-03 | Dynamic Secrets Injection, Input Validation, Secure Clipboard Redaction, Secrets Scanning | #27, #56, #88, #92 | METRIC-SEC-INC | | REQ-PERF-01 | Async Rendering Pipeline, Smart Diff Rendering, Performance Guardrails, Latency Heatmap | #17, #18, #16, #93 | METRIC-LATENCY | | REQ-REL-01 | Local Resilience Cache, Resilient Transport, Hot Patch Delivery, Self-Healing Config | #14, #35, #71, #91 | METRIC-AVAIL | | REQ-OBS-01 | Observability Mesh Adapter, Telemetry Overlay, Incident Timeline, Streaming Metrics | #20, #8, #45, #52 | METRIC-MTTD | | REQ-OPS-01 | Trusted Pipeline, Inline Runbooks, Ops Templates, Scheduled Execution, Outcome Tracking | #79, #23, #34, #58, #85 | METRIC-MTTR | | REQ-DATA-01 | Conflict Resolver, Data Quality Checks, Data Provenance Visualizer, Predictive Prefetch | #15, #67, #46, #32 | METRIC-LATENCY | | REQ-INT-01 | Version Negotiation, CLI/TUI Bridge, Zero-Trust Connector, Message Bus Integration | #42, #99, #13, #82 | METRIC-AVAIL | | REQ-DX-01 | Plugin Marketplace Governance, Semantic Layout DSL, Analytics Widgets, Policy Validator | #75, #7, #55, #24 | METRIC-EXT-ADOPT |", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-2", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 2, "text": "### Module Topology ``` ┌──────────────────────────────────────────┐ │ Пользователь / Assistive Tech / SSO │ └───────────────┬──────────────────────────┘ │ ┌───────▼────────────────────────────────────────────┐ │ Stellar TUI Core Kernel (#1) │ │ • Command Router & Keymap Engine (#2, #3) │ │ • FlexGrid Layout Runtime (#4) │ │ • Input Guard & Validation (#56) │ └───────┬──────────────┬───────────────┬─────────────┘ │ │ │ ┌────────────▼──────┐ ┌─────▼──────────┐ ┌──▼───────────────┐ │ Resilience Layer │ │ Security Env. │ │ Observability Mesh │ │ (#14, #35, #91) │ │ (#27, #9, #11) │ │ (#20, #8, #45) │ └─────────┬─────────┘ └─────┬──────────┘ └─────────┬─────────┘ │ │ │ ┌──────▼────────┐ ┌──────▼─────────┐ ┌──────────▼─────────┐ │ Data Engine │ │ Integration Hub│ │ DX Toolkit │ │ (#15, #67) │ │ (#42, #82, #13)│ │ (#75, #7, #24, #55) │ └──────┬────────┘ └──────┬─────────┘ └──────────┬─────────┘ │ │ │ ┌──────▼─────────────────▼──────────────────────▼─────────┐ │ Trusted Delivery Pipeline (#79) & Governance Portal (#96)│ └─────────────────────────────────────────────────────────┘ ```", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-3", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 3, "text": "### Data & Control Flow - Управление командой → Command Router → Execution Policies → Integration Hub → внешние API/шины. - Данные состояния и справочники → Local Resilience Cache (#14) с TTL, Conflict Resolver (#15) → Data Engine. - Секреты → Dynamic Secrets Injection (#27) → временные креды → Integration Hub; ревокация через Secret Manager. - Телеметрия → Observability Mesh (#20) → OpenTelemetry Collector → Grafana/Tempo/Loki; inline overlay (#8) использует те же потоки. - Доставка модулей → Trusted Pipeline (#79) подпись → Governance Portal (#96) → Core Kernel hot swap (#1, #71).", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-4", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 4, "text": "### Integration Contracts - gRPC `stellar.core.CommandService` (`ExecuteCommand`, `DryRun`, `Schedule`) с Result<Outcome, DomainError>; таймаут ≥2с, ≥2 ретраев. - gRPC `stellar.telemetry.TraceExporter` (OpenTelemetry OTLP) с обогащением request_id, latency_ms. - REST `POST /v1/modules` для загрузки подписанных плагинов; заголовки `X-Signature`, `X-Version`. - EventBus (NATS/Kafka) темы `stellar.audit.append`, `stellar.resync.request`, `stellar.runbook.trigger` с схемами JSONSchema v1. - Secret Manager API `GET /leases/{id}` с TTL и политикой auto-revoke, конфиг через переменные `HTTP_TIMEOUT_S`, `HTTP_RETRIES`, `ENDPOINTS_ALLOWLIST`.", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-5", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 5, "text": "### Security Envelope - Zero-Trust Connector (#13) валидирует подписи ответов и договорённые версии (#42). - Token-based RBAC (#11) с матрицей ролей (Operator, SRE, SecOps, Admin) и наследуемыми scopes. - Policy-as-Code (OPA/Rego) для Command Validator, интеграция с Policy Validator (#24) на этапе загрузки модулей.", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-6", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 6, "text": "### Observability & SRE Controls - Tracing: `tracing` + OpenTelemetry exporters (#20), логируем request_id/status/latency. - Метрики: Prometheus endpoints из TUI агента (CPU, FPS, cache hit rate) + Streaming Aggregator (#52). - Логи: структурированный JSON → Loki; Incident Timeline (#45) собирает события из audit ledger (#10) и observability потока.", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-7", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 7, "text": "## Implementation Plan | Фаза | Период | Ответственные | Цели | Артефакты | Контрольная точка | Откат | | --- | --- | --- | --- | --- | --- | --- | | Foundations | Недели 1–3 | Lead Architect, UX Lead | Уточненные сценарии, RBAC матрица, архитектурные ADR | ADR-0001..0004, Persona deck, обновлённые REQ | Архитектурное ревью + SecOps sign-off | Вернуться к сбору требований, приостановить разработку | | Core Kernel & DX | Недели 4–8 | Rust Core Team, DX Lead | Реализация ядра (#1), Command Router (#2), FlexGrid (#4), DSL (#7) | Прототип kernel, SDK спецификация, тестовые сценарии | Demo ядра на desktop + accessibility smoke | Rollback к CLI fallback, freeze SDK | | Resilience & Observability | Недели 9–12 | Resilience Squad, SRE Lead | Local Resilience Cache (#14), Observability Mesh (#20), Telemetry Overlay (#8) | Cache design doc, OTEL pipelines, Grafana dashboards | GameDay-1 прохождение, p95<180мс | Откат на degraded mode без кеша | | Security & Delivery Hardening | Недели 13–16 | SecOps Lead, Platform Team | Dynamic Secrets (#27), Secure Signing (#9), Trusted Pipeline (#79) | Secret lease flows, HSM runbooks, CI/CD blueprint | PenTest zero critical, pipeline подписывает модули | Откат: отключение hot patch, ручная доставка | | Pilot & Launch | Недели 17–20 | Program Manager, Support Lead | Пилот на 2 командах, runbooks (#23), Outcome Tracking (#85) | Pilot report, Incident timeline baseline, training packs | Go/No-Go c метриками p95<150мс, audit=100% | Rollback на предыдущий CLI + feature flag TUI |", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-8", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 8, "text": "## Security & Governance Policies - Все внешние вызовы через `WRAP.http` с `HTTP_TIMEOUT_S>=2`, `HTTP_RETRIES>=2`, список допуска `ENDPOINTS_ALLOWLIST`. - DomainError enum (thiserror) для всех публичных API; никакого `unwrap!`/`expect!`. - Secrets: выдача краткоживущих токенов (≤15 мин), аудит выдачи, принудительная ревокация при завершении сессии. - RBAC: матрица ролей, enforcement в Command Router, отдельные scopes для прослушивания телеметрии. - Supply chain: подписанные модули (Ed25519), проверка цепочки в Trusted Pipeline (#79), SOC2 журнал. - Governance Portal (#96) отображает статус политик, автоматический compliance scan (#100).", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-9", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 9, "text": "## Metrics & Success Criteria | Метрика | Базовая линия | Цель | Инструмент | | --- | --- | --- | --- | | METRIC-LATENCY (p95) | 320 мс CLI | ≤150 мс | tracing + Prometheus histogram | | METRIC-APDEX | 0.78 | ≥0.95 | UX telemetry, Outcome Tracking (#85) | | METRIC-MTTD | 12 мин | ≤2 мин | Incident Timeline (#45), Streaming Metrics (#52) | | METRIC-MTTR | 28 мин | ≤10 мин | Runbook telemetry (#23), Outcome Tracking | | METRIC-AUDIT-OK | 72% полноты | 100% | Immutable Ledger (#10), Audit Export (#38) | | METRIC-SEC-INC | 2/квартал | 0 | Policy validator (#24), Secrets scanning (#92) | | METRIC-EXT-ADOPT | 0 | ≥30% модулей от внешних команд | Plugin Marketplace (#75) аналитику |", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-10", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 10, "text": "## Monitoring & Runbooks - Dashboard «Stellar Core»: latency, FPS, cache hit, error rates. - Alerting: latency p95>180мс (warning), secrets lease failure (critical), audit backlog>5 мин (critical). - Runbooks: `RB-01 Cache Resync`, `RB-02 Secret Lease Renewal`, `RB-03 Pipeline Signature Failure`, `RB-04 Accessibility Regression`. - GameDays ежеквартально: хаос-сценарии (#39) с отчётами в Governance Portal.", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-11", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 11, "text": "## Deployment & Release Procedure 1. Разработчик пушит модуль → CI контейнер запускает lint/test → Policy Validator (#24) → подписывает артефакт. 2. Trusted Pipeline (#79) публикует модуль в Registry; Governance Portal обновляет статус. 3. Hot Patch механика (#71) доставляет модуль в staging; observability автоконфиг. 4. Feature flag rollout (10% → 50% → 100%) с мониторингом METRIC-LATENCY и METRIC-SEC-INC. 5. Rollback: `stellarctl module rollback --version <prev>` (подписанный пакет), автоматический откат кешей и конфигов.", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-12", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 12, "text": "## Operational Readiness Checklist - [ ] RBAC матрица утверждена SecOps и бизнесом. - [ ] Secret Manager интеграция прошла failover тест (TTL, revocation). - [ ] Observability dashboards доступны SRE и SecOps. - [ ] Runbooks опубликованы и синхронизированы с Incident Management. - [ ] Pilot feedback обработан, backlog приоритизирован. - [ ] Compliance сканеры (#100) выдают «зелёный» статус ≥7 дней подряд.", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-13", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 13, "text": "## Risks & Mitigations | Риск | Вероятность | Импакт | Стратегия | | --- | --- | --- | --- | | Сложность ядра и плагинов → технический долг | Средняя | Высокий | ADR governance, лимиты API, ревью плагинов | | Несогласованность данных в оффлайн-режиме | Средняя | Высокий | Conflict Resolver (#15), интерактивные проверки, обучение | | Производительная деградация при включении Telemetry Overlay | Низкая | Средний | Тестирование производительности, адаптивное отключение overlay | | Supply chain атака на модули | Низкая | Высокий | Подписи, Trusted Pipeline, автоматические сканеры CVE (#41) | | Пользовательское сопротивление переходу с CLI | Средняя | Средний | Hybrid CLI/TUI Bridge (#99), Training Mode (#43), Cohort analytics |", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-14", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 14, "text": "## Implementation Checklist for Teams - Core Team: завершить ядро, опубликовать SDK и примеры, внедрить tracing hooks. - Resilience Squad: реализовать кеш/очереди, провести хаос-тесты, подготовить runbook RB-01. - SecOps: настроить HSM, политики секретов, подписанные сертификаты, аудит RBAC. - SRE: построить дашборды, настроить алерты, подготовить GameDay сценарии. - DX/Marketplace: запустить Governance портал, включить Policy Validator, разработать обучающие материалы.", "embedding": null}
{"id": "docs/future/MaxThink-Stellar.md::chunk-15", "path": "docs/future/MaxThink-Stellar.md", "chunk_id": 15, "text": "## Appendices - Словарь ролей: Operator, SRE, SecOps, Platform Engineer, Partner Developer. - Границы ответственности: Core Team (kernel), Resilience Squad (cache & transport), SecOps (secrets, RBAC), SRE (observability), DX (SDK/Marketplace). - Следующие проверки: Security pen-test (конец недели 15), Accessibility audit (неделя 10), Performance benchmark (неделя 12).", "embedding": null}
{"id": "docs/future/stellar-tui-vision.md::chunk-1", "path": "docs/future/stellar-tui-vision.md", "chunk_id": 1, "text": "## Замысел Модульная TUI-платформа на Rust: ядро управляет экранами и командами, поверх него работают четыре опорных контура — устойчивость (локальный кеш и офлайн-очереди), безопасность (динамические секреты, подписи команд и модулей), наблюдаемость (OpenTelemetry, inline overlay) и управляемая поставка (подписанный pipeline, governance портал).", "embedding": null}
{"id": "docs/future/stellar-tui-vision.md::chunk-2", "path": "docs/future/stellar-tui-vision.md", "chunk_id": 2, "text": "## Что Это Даст - Устойчивость: офлайн-режим и восстановление команд убирают простои при обрывах связи. - Безопасность: короткоживущие секреты и проверенные пакеты закрывают statically leaked creds и supply-chain атаки. - Наблюдаемость: телеметрия и таймлайн инцидентов снижают MTTD до 2 минут, удерживая p95 ≤150 мс под контролем. - Управляемые релизы: единый pipeline и аудит ускоряют поставку без ручных проверок, поддерживая compliance.", "embedding": null}
{"id": "docs/future/stellar-tui-vision.md::chunk-3", "path": "docs/future/stellar-tui-vision.md", "chunk_id": 3, "text": "## Удобство Для Команд Операторы и инженеры работают в одном интерфейсе: быстрый отклик, автоподсказки, доступ к runbook и метрикам; администраторы развёртывают модули через подписанный pipeline и отслеживают политики в Governance Portal.", "embedding": null}
{"id": "docs/future/stellar-tui-vision.md::chunk-4", "path": "docs/future/stellar-tui-vision.md", "chunk_id": 4, "text": "## Следующие Шаги 1. Подтвердить пользовательские сценарии и RBAC матрицу. 2. Зафиксировать ADR-черновики для ядра, кеша, секретов, pipeline. 3. Запустить фазу Foundations по roadmap (см. `MaxThink-Stellar.md`).", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-1", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 1, "text": "Codex manages connections to Model Context Protocol (MCP) servers via manual `codex mcp add` commands and static TOML edits. This approach produces high cognitive load, inconsistent validation, and weak guardrails for secrets or health monitoring. This RFC proposes a comprehensive \"MCP Management Overhaul\" that delivers guided onboarding, typed registry services, automatic health diagnostics, secret management, template catalogs, and unified CLI/TUI workflows. The initiative positions Codex as the most ergonomic and secure MCP client on the market while preserving backward compatibility.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-2", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 2, "text": "- **Manual setup**: Users must discover commands, copy long argument lists, and edit TOML by hand. - **Limited validation**: Misconfigured commands silently fail at runtime; there is no proactive health check. - **Secrets leakage risk**: Environment variables and tokens reside unencrypted in config files. - **Fragmented UX**: CLI and TUI experiences diverge; automation/scripting lacks typed APIs. - **Poor diagnostics**: No guided troubleshooting when an MCP server cannot be reached.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-3", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 3, "text": "- Expand Codex adoption in enterprise environments that require auditable configuration workflows. - Reduce onboarding time for partner MCP servers (< 5 minutes from zero to functioning toolset). - Establish platform primitives for future marketplace and orchestration features.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-4", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 4, "text": "1. Deliver an intuitive, low-friction wizard (CLI and TUI) for adding, validating, and managing MCP servers. 2. Introduce a typed registry layer with transactional CRUD, schema validation, policy enforcement, and metadata. 3. Protect secrets via OS keychains (with fallback) and redaction-friendly exports. 4. Provide built-in health diagnostics, template catalogs, and automation hooks (CLI, JSON outputs, APIs). 5. Maintain backward compatibility and offer reversible migrations with clear rollbacks. 6. Offer opt-in telemetry for continuous UX improvement while respecting privacy controls.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-5", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 5, "text": "| Metric | Baseline | Target | Measurement | |--------|----------|--------|-------------| | Time-to-first-successful MCP tool call for new user | ~20 minutes (manual setup) | ≤5 minutes for 95% of guided sessions | Wizard telemetry (opt-in) + manual QA | | First-run health-check pass rate | ~55% (est.; manual reporting) | ≥90% when wizard test executed | Registry health logs | | Plaintext secrets stored in config | Non-zero | 0 occurrences | Config audit during CI + integration tests | | CLI/TUI configuration divergence bugs | 4 incidents / quarter | 0 incidents post-launch | Bug tracker | | Support tickets tagged “MCP setup” | Baseline 1.0x | ≤0.3x within two quarters | Support analytics |", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-6", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 6, "text": "- Building a hosted marketplace for MCP servers (future consideration). - Implementing automated failover/swarming for MCP servers. - Replacing the existing config format or TOML parser. - Providing managed hosting or distribution of third-party binaries.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-7", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 7, "text": "| Persona | Key Needs | Primary Surface | |---------|-----------|-----------------| | **Solo developer** | Quick setup, copy/paste commands, immediate feedback | CLI wizard | | **Enterprise platform engineer** | Policy enforcement, auditability, secret isolation, automation | Registry API, CLI JSON | | **Security reviewer** | Clear trust boundaries, secret handling, telemetry governance | Documentation, config schema | | **TUI-focused user** | Visual overview, inline diagnostics, keyboard navigation | TUI panel |", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-8", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 8, "text": "1. **Config Schema Evolution** – add metadata, template references, auth blocks, and version markers to `McpServerConfig`. 2. **Migration Engine** – `codex_core::config::migrations::mcp::v2` handles forward/backward conversions, with golden tests and dry-run mode. 3. **Registry Service Layer** – new module `codex_core::mcp::registry` exposing typed CRUD APIs and policy enforcement. 4. **Secret Management** – integrate OS keychains and provide encrypted fallback storage with rotation workflows. 5. **Health Diagnostics** – `codex_core::mcp::health` executes probes, schema validation, TLS verification, and caches status. 6. **Template Catalog** – packaged templates plus optional signed remote index; plug into wizard flow. 7. **Unified UX** – CLI wizard (`codex mcp wizard`, `codex mcp add --template`), TUI panel, automation hooks, and improved help/completion. 8. **Telemetry & Analytics** – opt-in metrics for wizard outcomes, health failures, template usage.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-9", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 9, "text": "- Introduce `experimental.mcp_overhaul` boolean flag in config; disabled by default in first releases. - CLI/TUI surfaces gated behind `--experimental-mcp-wizard` / TUI toggle when flag is false. - Telemetry collection requires both `experimental.mcp_overhaul=true` *and* explicit `telemetry.mcp=true`. - Migration commands (`codex mcp migrate`) require flag or `--force` to prevent accidental adoption.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-10", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 10, "text": "- Extend `McpServerConfig` with: - `display_name`, `category`, `template_id`, `description` - `auth` (enum: `None`, `Env`, `ApiKey`, `OAuth`, …) - `healthcheck` (command, protocol, interval, timeout, last status) - `tags` (array of strings) - `created_at`, `last_verified_at` - Introduce `McpTemplate` struct with `id`, `version`, `summary`, `defaults`, and validation hints. - Add `mcp_schema_version` top-level key in `config.toml` for migrations.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-11", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 11, "text": "[mcp_servers.docs] display_name = \"Documentation MCP\" category = \"knowledge\" command = \"docs-mcp\" args = [\"--mode\", \"local\"] template_id = \"docs/local@1\" created_at = \"2025-09-20T18:32:10Z\" last_verified_at = null", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-12", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 12, "text": "- `codex_core::config::migrations::mcp::v2` performs: - Structural upgrades (adding metadata with defaults). - Secret extraction (move sensitive env entries into keychain/fallback store). - Healthcheck defaults (disabled unless template suggests otherwise). - Provide `codex mcp migrate --dry-run` to show diff; `codex mcp rollback` reverts using backup files. - Migration output includes legacy snapshot, new config preview, and validation summary (policy violations, missing secrets).", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-13", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 13, "text": "- `Registry` API exposes: - `create_server`, `update_server`, `delete_server`, `list_servers`, `get_server` - Template resolution and override application - Policy checks (command allowlist, env key restrictions, timeout bounds) - Implement optimistic locking using revision tokens to prevent clobbering concurrent edits. - Emit structured error codes for CLI/TUI messaging (`ERR_INVALID_COMMAND`, `ERR_SECRET_MISSING`, etc.).", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-14", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 14, "text": "| Scenario | Expected Behaviour | |----------|--------------------| | `ConfigProfile` overrides MCP block | Registry resolves active profile, applies overrides before runtime validation | | CLI `-c mcp_servers.foo.command=...` | Allowed for quick edits; wizard warns about mixing manual overrides | | Multiple profiles referencing same server | Registry uses composite key `<profile>::<server>` internally to avoid collisions | | Legacy profile without `mcp_schema_version` | Treated as schema v1; migration prompt triggered |", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-15", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 15, "text": "- For macOS: Keychain; Windows: DPAPI; Linux: libsecret. Provide feature flags and runtime detection. - Fallback: age-encrypted local store under `~/.codex/secrets.json` with CLI-managed passphrase. - CLI offers `codex mcp secret set/get/rotate` abstractions; display outputs redact sensitive values by default.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-16", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 16, "text": "- Probe STDIO servers: spawn process with registry policy (seatbelt/landlock), capture handshake. - For SSE servers (via adapters), perform HTTP HEAD/OPTIONS when applicable. - Validate MCP initialize response against schema, record latency, TLS fingerprint. - Store latest status in registry and surface via CLI/TUI. - Provide `codex mcp test <name> [--json]` with detailed diagnostics and suggestions.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-17", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 17, "text": "Default cadence: no background checks unless enabled via template; when enabled, interval defaults to 1 hour with jitter (±10%) and max concurrency of 3 probes to limit CPU.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-18", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 18, "text": "- Ship built-in templates under `resources/mcp_templates/` (YAML/JSON) with metadata. - CLI/TUI wizard fetches template list, renders summary, applies defaults. - Remote catalog support: signed JSON index (Ed25519 signatures). CLI caches downloads, verifies signatures, supports `codex mcp template pull`.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-19", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 19, "text": "Remote catalog policy: require `templates.remote.enabled=true` and `templates.remote.trust_anchor=<path to public key>`. Unsigned or mismatched signatures abort fetch with actionable error.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-20", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 20, "text": "- Replace `codex mcp add` with multi-step wizard: 1. Choose template or start from blank. 2. Provide command/args with inline validation and completion hints. 3. Capture env variables (optionally marking secrets -> keychain). 4. Optionally enable health checks (frequency, timeout). 5. Run `test` before committing; show diff. 6. Persist via registry (auto backup). - Additional commands: `ls`, `show`, `edit`, `test`, `import`, `export`, `migrate`, `rollback`, `template list/show/pull`, `secret set/get`. - Support `--json` output for automation and `--non-interactive --template foo --set key=value` for scripting. - Update shell completion to surface template IDs and server names.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-21", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 21, "text": "- New MCP panel summarizing servers, status, next health probe, and last error. - Inline actions: test connection, edit config, rotate secret. - Reuse wizard flow with keyboard navigation and inline help. - Update TUI snapshot tests (insta) to capture new rendering.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-22", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 22, "text": "- Expose registry APIs via Rust crates for embedding in other tools. - Optional JSON-RPC endpoint (disabled by default) enabling `codex mcp plan --json` for CI gating.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-23", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 23, "text": "- Opt-in via config (`telemetry.mcp=true`). - Events: wizard_started/completed, test_success/failure category, template_id usage. - Payloads anonymized (hash server names, no secrets). Provide clear documentation.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-24", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 24, "text": "```json { \"event\": \"wizard_completed\", \"mcp_overhaul\": true, \"template_id\": \"docs/local@1\", \"duration_seconds\": 182, \"health_success\": true, \"errors\": [], \"client_id_hash\": \"sha256:salted...\" } ```", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-25", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 25, "text": "- **Trust boundaries**: CLI/TUI operate in user context; registry enforces command allowlists; health probes run under sandbox. - **Secrets**: Never write secrets to disk in plaintext; redaction default; audit logging of secret operations. - **Remote templates**: Require signature verification; disable by default until user opts in. - **Telemetry**: Opt-in, anonymized, documented, with easy disable. - **Rollbacks**: Backups stored with restrictive permissions.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-26", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 26, "text": "| Platform | Primary store | Fallback | Notes | |----------|---------------|----------|-------| | macOS | Keychain Services | age file (`~/.codex/secrets.age`) | Requires user approval for first insert | | Windows | DPAPI (Current User) | age file | Encrypts using user profile keys | | Linux (GNOME/KDE) | libsecret keyring | age file | Detect via DBus; prompt if locked | | Linux (headless) | age file | N/A | CLI guides user through passphrase creation |", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-27", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 27, "text": "- Maintain support for legacy `mcp_servers` entries; migrate lazily when user runs wizard or explicit `migrate` command. - Provide `codex mcp export --legacy` to generate prior format for downgrade. - Document backup and rollback instructions prominently.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-28", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 28, "text": "| Component | Legacy Behaviour | Overhaul Behaviour | |-----------|------------------|--------------------| | `Config::load_with_cli_overrides` | Shallow merge; last-write wins | Merge via registry schema; conflicts produce structured error | | Profiles (`~/.codex/profiles/*.toml`) | Independent TOML; manual sync | Schema version tracked per profile; wizard prompts to migrate | | CLI `codex mcp add` | Direct write to `config.toml` | Alias: triggers wizard or `--legacy-add` fallback | | TUI MCP panel | Textual list | Rich panel with status; legacy mode hides health columns |", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-29", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 29, "text": "- Registry operations are local and synchronous; config writes remain atomic via temp files. - Health probes cached to avoid excessive process spawning; expose TTL. - Template cache stored under `~/.codex/cache/mcp_templates/` with pruning mechanism.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-30", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 30, "text": "| Risk | Impact | Mitigation | |------|--------|------------| | Config corruption during migration | Loss of MCP entries | Atomic temp-file writes, multi-level backups (.bak1..3), dry-run diff | | Secret store inaccessible | Wizard blocked | Provide fallback age path + clear instructions | | Health probe overload | CPU spikes | Concurrency cap, jitter, manual disable per server | | Signature key compromised | Template supply-chain | Trust-anchor rotation procedure + revocation list | | Telemetry misconfiguration | Privacy incident | Opt-in default off, documented payload, internal access controls |", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-31", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 31, "text": "- Unit tests for migrations, registry validation, secret manager adapters, and health probes. - Integration tests using expectrl to drive wizard, plus mocked MCP servers (STDIO + SSE) with failure scenarios. - TUI snapshot tests (insta) for new panels. - Cross-platform manual QA: macOS, Windows, Linux distributions. - KPI instrumentation: automated scripts measure wizard duration and health success in CI scenarios (no telemetry dependency).", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-32", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 32, "text": "1. Land RFC, incorporate feedback, finalize design. 2. Implement schema changes and migrations behind feature flag. 3. Deliver registry + secret + health modules. 4. Release CLI/TUI wizard in preview mode (`--experimental-mcp-wizard`). 5. Collect feedback, enable telemetry (for opted-in users). 6. Stabilize API, remove flag, update documentation, announce release.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-33", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 33, "text": "| Phase | Key Deliverables | Exit Criteria | |-------|------------------|---------------| | 0 – RFC & Governance | Updated RFC, approvals, success metrics | Sign-off from Core/Security/UX/TUI | | 1 – Foundations | Schema + migrations + registry (behind flag) | Unit/golden tests green, manual migration dry-run | | 2 – Secrets & Diagnostics | Secret adapters, health module | Secrets stored securely on all supported OS, health test CLI passes | | 3 – UX Surfaces | CLI wizard, templates, TUI panel | End-to-end flow passes manual QA, CLI/TUI parity achieved | | 4 – Automation & Telemetry | JSON-RPC, CI plan command, opt-in telemetry | CI pipeline validation script available, telemetry docs published | | 5 – Hardening & Release | Integration tests, perf tuning, docs | Feature flag removed post-beta, success metrics trending to targets |", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-34", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 34, "text": "- **Minimal CLI improvements only**: insufficient security/UX gains. - **External management tool**: adds deployment complexity and fragment UX. - **Migrate to different config format**: high churn with little benefit.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-35", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 35, "text": "1. Required granularity for command allowlists (regex vs explicit paths)? **Proposed answer**: explicit absolute-path allowlist with optional glob escape hatch; default allowlist includes `/usr/bin`, `/usr/local/bin`; custom entries require manual confirmation in wizard. 2. Should we enforce template signatures for all remote catalogs or allow unsigned with warnings? **Decision**: enforce signatures; unsigned catalogs blocked unless `templates.remote.allow_unsigned=true` explicitly set. 3. Which telemetry data points are acceptable under current privacy guidelines? **Consulted Security/Privacy**: allow event name, duration, error category, template id, hashed client id; no raw commands or env keys. 4. How often should health checks run by default to balance freshness and performance? **Default**: disabled unless template marks \"managed\"; recommended interval 1 hour with jitter; user-configurable 5 min – 24 h.", "embedding": null}
{"id": "docs/rfcs/0001-mcp-management-overhaul.md::chunk-36", "path": "docs/rfcs/0001-mcp-management-overhaul.md", "chunk_id": 36, "text": "- **Cursor / Claude Desktop**: provide template pickers, quick toggles, but limited policy enforcement. - **Windsurf**: offers visual status indicators; lacks scripted automation outputs. - **Turbo (OpenAI)**: early support for MCP; minimal UX tooling yet. - Identified gaps: automated health diagnostics, secret isolation, reversible migrations, enterprise automation hooks. This RFC fills those gaps.", "embedding": null}
{"id": "docs/rfcs/0002-stellar-core-kernel.md::chunk-1", "path": "docs/rfcs/0002-stellar-core-kernel.md", "chunk_id": 1, "text": "**Status**: Draft **Author**: GPT-5-codex **Created**: 2025-09-18 **Updated**: 2025-09-18 **Reviewers**: Core, UX, Accessibility, DX **Target Release**: M1 / Week 1–3", "embedding": null}
{"id": "docs/rfcs/0002-stellar-core-kernel.md::chunk-2", "path": "docs/rfcs/0002-stellar-core-kernel.md", "chunk_id": 2, "text": "## 1. Goal & Non-Goals - **Goal**: Deliver a unified Stellar TUI/CLI kernel featuring Command Router, Keymap Engine, FlexGrid layout runtime, and Input Guard that satisfies REQ-UX-01/02 and REQ-ACC-01 from `MaxThink-Stellar.md` (#1, #2, #4, #63). - **Success Metrics**: METRIC-APDEX ≤ 180 мс; METRIC-CSAT ≥ 4.5; zero accessibility blockers at launch. - **Non-Goals**: Resilience caching, security hardening, and delivery pipeline decisions (handled in RFC 0003/0004/0005); new plugin marketplace capabilities (REQ-DX-01) beyond kernel hooks.", "embedding": null}
{"id": "docs/rfcs/0002-stellar-core-kernel.md::chunk-3", "path": "docs/rfcs/0002-stellar-core-kernel.md", "chunk_id": 3, "text": "## 2. Scope & Personas - **Operator & Assistive Tech**: Navigate Insight Canvas with keyboard-first, high-contrast UI (`stellar-tui-vision.md`). - **SRE & Platform Engineer**: Require CLI/TUI parity for automation and layout DSL for dashboards. - **Partner Developer**: Consumes SDK APIs for widgets; integration details deferred to DX RFC.", "embedding": null}
{"id": "docs/rfcs/0002-stellar-core-kernel.md::chunk-4", "path": "docs/rfcs/0002-stellar-core-kernel.md", "chunk_id": 4, "text": "## 3. Architecture Overview ``` ┌──────────────┐ │ Input Stream │ └──────┬───────┘ │ key events ┌──────▼───────┐ ┌──────────────┐ │ Command │ │ Accessibility│ │ Router (#1) │───▶│ Bridge (#6) │ └──────┬───────┘ └────┬─────────┘ │ │ ┌──────▼────────┐ ┌────▼─────────┐ │ Keymap Engine │ │ Insight │ │ (#2/#3) │ │ Canvas View │ └──────┬────────┘ │ Layout (#4) │ │ └────┬─────────┘ ┌──────▼────────┐ │ │ FlexGrid │ │ render tree │ Runtime (#4) │◀───────┘ └──────┬────────┘ │ diff frames ┌──────▼────────┐ │ Render Driver │ (Async pipeline, REQ-PERF-01) └───────────────┘ ```", "embedding": null}
{"id": "docs/rfcs/0002-stellar-core-kernel.md::chunk-5", "path": "docs/rfcs/0002-stellar-core-kernel.md", "chunk_id": 5, "text": "## 4. Detailed Design ### 4.1 Command Router & Keymap Engine - Normalize input events (keyboard/mouse/assistive) into semantic actions; maintain keymap profiles per role. - DSL-driven routing table allowing contextual overrides (modal flows, inline overlays). - Accessibility hooks ensure focus cycles and escape sequences abide by REQ-ACC-01.", "embedding": null}
{"id": "docs/rfcs/0002-stellar-core-kernel.md::chunk-6", "path": "docs/rfcs/0002-stellar-core-kernel.md", "chunk_id": 6, "text": "### 4.2 FlexGrid Layout Runtime - Declarative layout spec describing Insight Canvas, Telemetry side-panels, runbook drawers. - Diff-oriented rendering using Smart Diff (REQ-PERF-01 #16) to reduce repaint cost. - Integration with `codex-tui` stylings (`Stylize`, `wrapping.rs`) for cognitive ease.", "embedding": null}
{"id": "docs/rfcs/0002-stellar-core-kernel.md::chunk-7", "path": "docs/rfcs/0002-stellar-core-kernel.md", "chunk_id": 7, "text": "### 4.3 Input Guard & Validation - Synchronous guard rails blocking unsafe commands; integrates with Security RFC for policy queries. - Rate-limits high-cost commands to maintain APDEX target; fallbacks for offline mode (resilience hooks).", "embedding": null}
{"id": "docs/rfcs/0002-stellar-core-kernel.md::chunk-8", "path": "docs/rfcs/0002-stellar-core-kernel.md", "chunk_id": 8, "text": "### 4.4 CLI/TUI Bridge - Shared core crate `codex-core::stellar_kernel` powering both CLI command handlers and TUI components. - Bridge layer exposes JSON events for automation and transcript logging (DX alignment).", "embedding": null}
{"id": "docs/rfcs/0002-stellar-core-kernel.md::chunk-9", "path": "docs/rfcs/0002-stellar-core-kernel.md", "chunk_id": 9, "text": "## 5. Constraints & Dependencies - Must not regress existing TUI command latency or keyboard navigation. - Depends on `codex-tui` style guidelines and `textwrap` utilities. - Security policies resolved asynchronously; guard layer must fail closed.", "embedding": null}
{"id": "docs/rfcs/0002-stellar-core-kernel.md::chunk-10", "path": "docs/rfcs/0002-stellar-core-kernel.md", "chunk_id": 10, "text": "## 6. Trace Anchors | Requirement | Implementation Artifact | Validation | | ----------- | ------------------------ | ---------- | | REQ-UX-01 (#1, #2) | Command Router, Keymap Engine modules | Unit tests (`command_router_test.rs`), APDEX telemetry | | REQ-UX-02 (#4, #63) | FlexGrid runtime, layout specs | Snapshot tests (Insta) | | REQ-ACC-01 (#6) | Accessibility bridge hooks | Accessibility test suite, assistive tech scripts | | REQ-PERF-01 (#16) | Render pipeline diffing | Benchmark harness (`bench_stellar_render.rs`) |", "embedding": null}
{"id": "docs/rfcs/0002-stellar-core-kernel.md::chunk-11", "path": "docs/rfcs/0002-stellar-core-kernel.md", "chunk_id": 11, "text": "## 7. Validation Plan - `cargo test -p codex-core --features stellar_kernel` - `cargo test -p codex-tui` with Insta snapshots updated. - Accessibility regression suite (screen reader playback, contrast checklists). - Instrument APDEX metrics via OpenTelemetry export; baseline captured in Validate phase.", "embedding": null}
{"id": "docs/rfcs/0002-stellar-core-kernel.md::chunk-12", "path": "docs/rfcs/0002-stellar-core-kernel.md", "chunk_id": 12, "text": "## 8. Open Questions & Risks - Need confirmation on keyboard macro customization scope for partner developers. - Async render driver may require bounded executor; decision deferred to ADR-CORE-001. - Ensure Input Guard integrates cleanly with forthcoming security policies without double prompts.", "embedding": null}
{"id": "docs/rfcs/0003-stellar-resilience.md::chunk-1", "path": "docs/rfcs/0003-stellar-resilience.md", "chunk_id": 1, "text": "**Status**: Draft **Author**: GPT-5-codex **Created**: 2025-09-18 **Updated**: 2025-09-18 **Reviewers**: Resilience Squad, SRE, Data, Core **Target Release**: M2 / Week 3–5", "embedding": null}
{"id": "docs/rfcs/0003-stellar-resilience.md::chunk-2", "path": "docs/rfcs/0003-stellar-resilience.md", "chunk_id": 2, "text": "## 1. Goal & Non-Goals - **Goal**: Provide Local Resilience Cache, Conflict Resolver, Weighted Confidence scoring, and Predictive Prefetch that satisfy REQ-REL-01, REQ-DATA-01, and REQ-PERF-01 (#14, #15, #32, #35, #67). - **Success Metrics**: METRIC-AVAIL ≥ 99.3%; METRIC-LATENCY 95p ≤ 200 мс; zero data loss during chaos tests. - **Non-Goals**: Security policies (RFC 0004), delivery pipeline governance (RFC 0005), marketplace analytics.", "embedding": null}
{"id": "docs/rfcs/0003-stellar-resilience.md::chunk-3", "path": "docs/rfcs/0003-stellar-resilience.md", "chunk_id": 3, "text": "## 2. Scope & Personas - **SRE**: Run chaos drills, monitor cache hit, toggle resilience profiles. - **Operator**: Benefit from offline insight continuity and rollback cues. - **Platform Engineer**: Integrate predictive prefetch with pipeline scheduling.", "embedding": null}
{"id": "docs/rfcs/0003-stellar-resilience.md::chunk-4", "path": "docs/rfcs/0003-stellar-resilience.md", "chunk_id": 4, "text": "## 3. Architecture Overview ``` ┌────────────────┐ miss/fetch ┌─────────────────────┐ │ Insight Canvas │◀────────────────▶│ Local Resilience │ │ Consumers │ │ Cache (#14, #35) │ └─────┬──────────┘ └─────────┬───────────┘ │ │ │ conflict log │prefetch plan ┌─────▼─────────────────────┐ ┌─────────▼───────────┐ │ Conflict Resolver (#15) │ │ Predictive Prefetch │ │ Weighted Confidence (#32) │ │ Engine (#67) │ └─────┬─────────────────────┘ └─────────┬───────────┘ │ reconciled events │ ┌─────▼────────────┐ ┌─────────────▼──────────┐ │ Durable Storage │◀────────────▶│ Integration Hub (M1/M5)│ └──────────────────┘ └────────────────────────┘ ```", "embedding": null}
{"id": "docs/rfcs/0003-stellar-resilience.md::chunk-5", "path": "docs/rfcs/0003-stellar-resilience.md", "chunk_id": 5, "text": "## 4. Detailed Design ### 4.1 Local Resilience Cache - Pluggable storage backends (in-memory, sled, sqlite) with TTL and snapshotting. - Maintains per-module health and supports offline mode replay. - Integrates with security layer for encrypted secrets at rest.", "embedding": null}
{"id": "docs/rfcs/0003-stellar-resilience.md::chunk-6", "path": "docs/rfcs/0003-stellar-resilience.md", "chunk_id": 6, "text": "### 4.2 Conflict Resolver & Weighted Confidence - Multi-source merges using CRDT-inspired rules; conflicts surfaced to UI overlay. - Confidence score computed via weighted heuristic (freshness, source trust, schema validation). - Operators can accept/override decisions; audit trail stored for governance (links to RFC 0005).", "embedding": null}
{"id": "docs/rfcs/0003-stellar-resilience.md::chunk-7", "path": "docs/rfcs/0003-stellar-resilience.md", "chunk_id": 7, "text": "### 4.3 Predictive Prefetch - Telemetry-driven scheduler monitors command usage and preloads data for next likely actions. - Respects latency guardrails and avoids flooding networks during degraded connectivity.", "embedding": null}
{"id": "docs/rfcs/0003-stellar-resilience.md::chunk-8", "path": "docs/rfcs/0003-stellar-resilience.md", "chunk_id": 8, "text": "### 4.4 Chaos & Recovery Hooks - Provide `ChaosProfile` definitions referencing blueprint (#91) for hot patch delivery. - Integrate with Observability metrics for failover events.", "embedding": null}
{"id": "docs/rfcs/0003-stellar-resilience.md::chunk-9", "path": "docs/rfcs/0003-stellar-resilience.md", "chunk_id": 9, "text": "## 5. Constraints & Dependencies - Must avoid data divergence; conflict resolution deterministic. - Prefetch engine configurable; obeys security classification from RFC 0004. - Offline cache must degrade gracefully on corruption (self-healing).", "embedding": null}
{"id": "docs/rfcs/0003-stellar-resilience.md::chunk-10", "path": "docs/rfcs/0003-stellar-resilience.md", "chunk_id": 10, "text": "## 6. Trace Anchors | Requirement | Artifact | Validation | | ----------- | -------- | ---------- | | REQ-REL-01 (#14, #35, #91) | Resilience cache module, chaos profiles | Chaos tests, recovery drills | | REQ-DATA-01 (#15, #32, #67) | Conflict resolver, predictive prefetch | Data quality tests, deterministic merges | | REQ-PERF-01 (#17) | Prefetch scheduler policies | Latency benchmarks, APDEX telemetry |", "embedding": null}
{"id": "docs/rfcs/0003-stellar-resilience.md::chunk-11", "path": "docs/rfcs/0003-stellar-resilience.md", "chunk_id": 11, "text": "## 7. Validation Plan - `cargo test -p codex-core --features stellar_resilience` (unit + property tests). - Chaos automation: simulated network outage, cache corruption, partial retries. - Data reconciliation harness comparing conflict outcomes vs golden snapshots. - Metrics capture: availability %, cache hit ratio, prefetch success rate.", "embedding": null}
{"id": "docs/rfcs/0003-stellar-resilience.md::chunk-12", "path": "docs/rfcs/0003-stellar-resilience.md", "chunk_id": 12, "text": "## 8. Open Questions & Risks - Need decision on persistent store default (sled vs sqlite) → ADR-RES-001. - Determine operator override UX specifics (ties to RFC 0002 layout work). - Prefetch privacy implications when partner connectors involved.", "embedding": null}
{"id": "docs/rfcs/0004-stellar-security.md::chunk-1", "path": "docs/rfcs/0004-stellar-security.md", "chunk_id": 1, "text": "**Status**: Draft **Author**: GPT-5-codex **Created**: 2025-09-18 **Updated**: 2025-09-18 **Reviewers**: SecOps, Security Architecture, Core **Target Release**: M3 / Week 4–6", "embedding": null}
{"id": "docs/rfcs/0004-stellar-security.md::chunk-2", "path": "docs/rfcs/0004-stellar-security.md", "chunk_id": 2, "text": "## 1. Goal & Non-Goals - **Goal**: Implement RBAC, Secure Command Signing, Dynamic Secrets, Sandbox Runner hardening, and immutable audit ledger (REQ-SEC-01/02/03, REQ-OPS-01; blueprint #9, #10, #11, #27, #57, #74, #88). - **Success Metrics**: METRIC-SEC-INC = 0 critical findings; METRIC-AUDIT-OK ≥ 95%; no P0 sandbox escapes. - **Non-Goals**: Observability overlays (RFC 0005) and delivery pipeline automation outside security gating.", "embedding": null}
{"id": "docs/rfcs/0004-stellar-security.md::chunk-3", "path": "docs/rfcs/0004-stellar-security.md", "chunk_id": 3, "text": "## 2. Scope & Personas - **SecOps**: Manage policies, rotate secrets, approve command signing keys. - **SRE/Operator**: Consume security banners, receive inline guardrail feedback. - **Platform Engineer**: Integrate security signals into pipeline gating.", "embedding": null}
{"id": "docs/rfcs/0004-stellar-security.md::chunk-4", "path": "docs/rfcs/0004-stellar-security.md", "chunk_id": 4, "text": "## 3. Architecture Overview ``` ┌────────────┐ policy query ┌─────────────────┐ │ Command │──────────────────▶│ RBAC Policy │ │ Router │ │ Engine (#11) │ └────┬───────┘ └─────┬───────────┘ │ allow/deny │ ┌────▼────────┐ sign requests ┌──────▼─────────┐ │ Sandbox │◀──────────────────│ Secure Signing │ │ Runner │ │ Service (#9) │ └────┬────────┘ └──────┬─────────┘ │ secrets lease │audit trail ┌────▼────────┐ ┌────▼──────────┐ │ Dynamic │ │ Immutable │ │ Secrets (#27)│ │ Audit Ledger │ └─────────────┘ └──────────────┘ ```", "embedding": null}
{"id": "docs/rfcs/0004-stellar-security.md::chunk-5", "path": "docs/rfcs/0004-stellar-security.md", "chunk_id": 5, "text": "## 4. Detailed Design ### 4.1 RBAC Policy Engine - Hierarchical roles aligned with alignment matrix; policies expressed via declarative YAML with static analysis. - Enforces scoped capabilities, attribute-based conditions, and time-bound overrides.", "embedding": null}
{"id": "docs/rfcs/0004-stellar-security.md::chunk-6", "path": "docs/rfcs/0004-stellar-security.md", "chunk_id": 6, "text": "### 4.2 Secure Command Signing - Use Ed25519 signatures stored in HSM-backed key vault; pipeline enforces signature verification before execution. - Session banners warn users about unsigned modules; Input Guard (RFC 0002) blocks execution.", "embedding": null}
{"id": "docs/rfcs/0004-stellar-security.md::chunk-7", "path": "docs/rfcs/0004-stellar-security.md", "chunk_id": 7, "text": "### 4.3 Dynamic Secrets & Injection - Lease-based secret distribution; integrate with resilience cache for offline usage with secure expiration. - Clipboard redaction and secure logging ensure no secret persistence.", "embedding": null}
{"id": "docs/rfcs/0004-stellar-security.md::chunk-8", "path": "docs/rfcs/0004-stellar-security.md", "chunk_id": 8, "text": "### 4.4 Sandbox Runner Hardening - Hardened seccomp profiles, resource quotas, and network isolation toggles. - Security telemetry forwarded to observability mesh for incident detection.", "embedding": null}
{"id": "docs/rfcs/0004-stellar-security.md::chunk-9", "path": "docs/rfcs/0004-stellar-security.md", "chunk_id": 9, "text": "### 4.5 Immutable Audit Ledger - Append-only log with hash chaining; exports to governance portal. - Supports tamper detection, SSO-aware context, and redaction filters.", "embedding": null}
{"id": "docs/rfcs/0004-stellar-security.md::chunk-10", "path": "docs/rfcs/0004-stellar-security.md", "chunk_id": 10, "text": "## 5. Constraints & Dependencies - Must integrate with existing `CODEX_SANDBOX_ENV_VAR` controls without modification. - Requires cryptographic libraries that meet enterprise compliance. - Works with offline mode, deferring verification until connection restored but marking commands as pending.", "embedding": null}
{"id": "docs/rfcs/0004-stellar-security.md::chunk-11", "path": "docs/rfcs/0004-stellar-security.md", "chunk_id": 11, "text": "## 6. Trace Anchors | Requirement | Artifact | Validation | | ----------- | -------- | ---------- | | REQ-SEC-01 (#9, #11, #74) | RBAC engine, secure signing | Policy unit tests, signing integration tests | | REQ-SEC-02 (#10, #57) | Audit ledger, export adapters | Ledger consistency tests, export verification | | REQ-SEC-03 (#27, #88) | Dynamic secrets, sandbox hardening | Secrets lease testing, sandbox smoke tests | | REQ-OPS-01 (#23) | Security signals to operations | Pipeline gating tests, alerting simulation |", "embedding": null}
{"id": "docs/rfcs/0004-stellar-security.md::chunk-12", "path": "docs/rfcs/0004-stellar-security.md", "chunk_id": 12, "text": "## 7. Validation Plan - Security unit/integration tests (`cargo test -p codex-security` TBD crate). - Static analysis (cargo audit, custom lint) and dependency scanning. - Threat modeling review with SecOps, update STRIDE findings. - Chaos security drills (credential expiration, sandbox escape attempts).", "embedding": null}
{"id": "docs/rfcs/0004-stellar-security.md::chunk-13", "path": "docs/rfcs/0004-stellar-security.md", "chunk_id": 13, "text": "## 8. Open Questions & Risks - Need final decision on ledger storage backend → ADR-SEC-001. - Determine policy authoring tooling (in-house vs open-source DSL). - Evaluate compatibility with partner marketplace modules for signed distribution.", "embedding": null}
{"id": "docs/rfcs/0005-stellar-delivery.md::chunk-1", "path": "docs/rfcs/0005-stellar-delivery.md", "chunk_id": 1, "text": "**Status**: Draft **Author**: GPT-5-codex **Created**: 2025-09-18 **Updated**: 2025-09-18 **Reviewers**: Platform Engineering, SecOps, DX **Target Release**: M5 / Week 6–8", "embedding": null}
{"id": "docs/rfcs/0005-stellar-delivery.md::chunk-2", "path": "docs/rfcs/0005-stellar-delivery.md", "chunk_id": 2, "text": "## 1. Goal & Non-Goals - **Goal**: Ship Trusted Pipeline, Governance Portal, Policy Validator, and Marketplace guardrails satisfying REQ-OPS-01, REQ-INT-01, REQ-DX-01 (#24, #42, #55, #75, #79, #85, #99). - **Success Metrics**: METRIC-EXT-ADOPT ≥ 60%; METRIC-AVAIL ≥ 99.5%; Review Effort ↓ 30% at M6. - **Non-Goals**: Core kernel internals, security primitives already defined in RFC 0004, observability overlays (M4).", "embedding": null}
{"id": "docs/rfcs/0005-stellar-delivery.md::chunk-3", "path": "docs/rfcs/0005-stellar-delivery.md", "chunk_id": 3, "text": "## 2. Scope & Personas - **Platform Engineer**: Orchestrates signed releases, monitors governance dashboards. - **SecOps**: Verifies policy sync, inspects audit trails. - **Partner Developer**: Submits plugins; receives guardrail feedback. - **Reviewers**: Consume fast-review package artifacts for PR evaluation.", "embedding": null}
{"id": "docs/rfcs/0005-stellar-delivery.md::chunk-4", "path": "docs/rfcs/0005-stellar-delivery.md", "chunk_id": 4, "text": "## 3. Architecture Overview ``` ┌────────────────┐ ┌────────────────────┐ │ Trusted │ │ Policy Validator │ │ Pipeline (#79) │────▶│ Service (#55) │ └──────┬─────────┘ └──────┬─────────────┘ │ signed bundle │policy verdicts ┌──────▼─────────┐ ┌───────▼────────────┐ │ Governance │◀────▶│ Marketplace Guard │ │ Portal (#85) │ │ Rails (#75, #24) │ └──────┬─────────┘ └───────┬────────────┘ │ telemetry │ ┌──────▼─────────┐ ┌───────▼────────────┐ │ CLI/TUI Bridge │ │ Zero-Trust Connector│ │ (#99, RFC 0002)│ │ (#92, #13) │ └───────────────┘ └─────────────────────┘ ```", "embedding": null}
{"id": "docs/rfcs/0005-stellar-delivery.md::chunk-5", "path": "docs/rfcs/0005-stellar-delivery.md", "chunk_id": 5, "text": "## 4. Detailed Design ### 4.1 Trusted Pipeline - Declarative pipeline spec with signed steps; integrates with Secure Signing service (RFC 0004). - Supports canary→GA rollout with automated rollback triggers. - Knowledge Pack auto-update orchestrated with version negotiation (REQ-INT-01).", "embedding": null}
{"id": "docs/rfcs/0005-stellar-delivery.md::chunk-6", "path": "docs/rfcs/0005-stellar-delivery.md", "chunk_id": 6, "text": "### 4.2 Governance Portal - Provides dashboards for policy drift, audit ledger sync, and release calendar. - SSO-aware hints surface outstanding approvals; multi-tenant view for partner developers.", "embedding": null}
{"id": "docs/rfcs/0005-stellar-delivery.md::chunk-7", "path": "docs/rfcs/0005-stellar-delivery.md", "chunk_id": 7, "text": "### 4.3 Policy Validator & Guardrails - Static/dynamic policy analysis for submitted modules; includes zero-trust connector outcomes. - Marketplace guardrails enforce compatibility, security posture, and resource limits.", "embedding": null}
{"id": "docs/rfcs/0005-stellar-delivery.md::chunk-8", "path": "docs/rfcs/0005-stellar-delivery.md", "chunk_id": 8, "text": "### 4.4 Metrics Bridge & Drift Hook - Optional local Prometheus endpoint aggregating delivery metrics. - Drift hook allows allowlisted scripts for detection, capturing results in governance portal.", "embedding": null}
{"id": "docs/rfcs/0005-stellar-delivery.md::chunk-9", "path": "docs/rfcs/0005-stellar-delivery.md", "chunk_id": 9, "text": "## 5. Constraints & Dependencies - Pipeline must integrate with existing CI without regressions; maintain offline signing fallback. - Requires instrumentation aligned with observability mesh (M4) for end-to-end tracing. - Guardrail decisions must be explainable to reduce review effort.", "embedding": null}
{"id": "docs/rfcs/0005-stellar-delivery.md::chunk-10", "path": "docs/rfcs/0005-stellar-delivery.md", "chunk_id": 10, "text": "## 6. Trace Anchors | Requirement | Artifact | Validation | | ----------- | -------- | ---------- | | REQ-OPS-01 (#79, #23, #34, #58, #85) | Trusted pipeline, governance portal | Pipeline E2E tests, dashboard smoke tests | | REQ-INT-01 (#42, #99, #13) | Version negotiation, CLI/TUI bridge | Integration tests, compatibility matrix | | REQ-DX-01 (#75, #55, #24) | Marketplace guardrails, policy validator | Acceptance tests, partner developer dry runs |", "embedding": null}
{"id": "docs/rfcs/0005-stellar-delivery.md::chunk-11", "path": "docs/rfcs/0005-stellar-delivery.md", "chunk_id": 11, "text": "## 7. Validation Plan - Pipeline smoke + rollback simulation; signed artifact verification. - Policy validator unit tests + scenario-based acceptance tests. - Governance portal snapshot and accessibility tests. - Metrics capture: adoption %, release success rate, approval turnaround time.", "embedding": null}
{"id": "docs/rfcs/0005-stellar-delivery.md::chunk-12", "path": "docs/rfcs/0005-stellar-delivery.md", "chunk_id": 12, "text": "## 8. Open Questions & Risks - Need decision on hosting model for governance portal (self-hosted vs SaaS) → ADR-DEL-001. - Clarify integration boundaries with external marketplaces. - Ensure reviewer fast-review package automation included in pipeline.", "embedding": null}
{"id": "docs/future/stellar/alignment.md::chunk-1", "path": "docs/future/stellar/alignment.md", "chunk_id": 1, "text": "## Inputs - `docs/future/MaxThink-Stellar.md` — requirements blueprint covering REQ-UX-01/02, REQ-ACC-01, REQ-SEC-01/02/03, REQ-PERF-01, REQ-REL-01, REQ-OBS-01, REQ-OPS-01, REQ-DATA-01, REQ-INT-01, REQ-DX-01 (#1–#99). - `docs/future/stellar-tui-vision.md` — scenario framing for modular TUI platform and phase sequencing.", "embedding": null}
{"id": "docs/future/stellar/alignment.md::chunk-2", "path": "docs/future/stellar/alignment.md", "chunk_id": 2, "text": "## Plan: Scenario Confirmation 1. **Operator Incident Triage (REQ-OBS-01, REQ-OPS-01, #8, #20, #23, #45)** - Operator navigates Stellar Insight Canvas to inspect telemetry overlay, trigger Debug Orchestrator, and follow inline runbook. - Requires keyboard-first navigation plus high-contrast overlay and screen-reader friendly summaries (`REQ-ACC-01`). 2. **SecOps Command Signing & Secrets (REQ-SEC-01/03, #9, #11, #27, #56, #88)** - SecOps defines RBAC policies, rotates dynamic secrets, and validates signed command bundles before release. - Depends on Secure Command Signing, session timeout banners, and secure clipboard redaction. 3. **SRE Resilience Sweep (REQ-REL-01, REQ-PERF-01, #14, #17, #35, #91)** - SRE triggers chaos profile, inspects Local Resilience Cache hit rate, and applies hot patch delivery without downtime. - Performance guardrails ensure APDEX ≤ 180 мс and latency p95 ≤ 200 мс. 4. **Platform Engineer Delivery Governance (REQ-OPS-01, REQ-DX-01, #24, #55, #79, #85)** - Platform engineer publishes Knowledge Packs through Trusted Pipeline, evaluates Policy Validator findings, and audits Marketplace guardrails.", "embedding": null}
{"id": "docs/future/stellar/alignment.md::chunk-3", "path": "docs/future/stellar/alignment.md", "chunk_id": 3, "text": "- Requires CLI/TUI parity and signed pipeline artifacts (hybrid flow per `stellar-tui-vision.md`). 5. **Partner Developer Integration Bridge (REQ-INT-01, REQ-DATA-01, #13, #15, #42, #67, #82)** - Partner developer negotiates transport version, inspects conflict resolver decisions, and publishes analytics widgets to DX toolkit. - Needs Zero-Trust Connector with outcome tracking and streaming metrics.", "embedding": null}
{"id": "docs/future/stellar/alignment.md::chunk-4", "path": "docs/future/stellar/alignment.md", "chunk_id": 4, "text": "## Plan: RBAC Matrix | Role | Capabilities | Notes | | ---- | ------------ | ----- | | Operator | Trigger Insight Canvas, access Observability Mesh overlay, run approved Debug Orchestrator playbooks, view incident timeline snapshots | Read/execute only; inherits accessibility theme presets (REQ-ACC-01, #8, #45). | | SRE | Manage resilience profiles, edit chaos templates, approve hot patches, configure Incident Timeline exports | Requires dual-control approval for pipeline pushes (REQ-REL-01, REQ-OPS-01, #14, #91). | | SecOps | Define RBAC guardrails, manage dynamic secrets, sign command bundles, review immutable audit ledger | Elevated access to Secure Signing HSM integration; clipboard redaction enforced (REQ-SEC-01/02/03, #9, #10, #27, #57). | | Platform Engineer | Operate Trusted Pipeline, curate policy packs, configure governance dashboards, schedule releases | Full pipeline author rights; policy drift alerts routed to this role (REQ-OPS-01, REQ-DX-01, #55, #79, #85). | | Partner Developer | Submit modules to Marketplace, request sandboxed execution, monitor outcome tracking | Scoped to Zero-Trust Connector endpoints; subject to plugin guardrails (#24, #75, #99).", "embedding": null}
{"id": "docs/future/stellar/alignment.md::chunk-5", "path": "docs/future/stellar/alignment.md", "chunk_id": 5, "text": "| | Assistive Tech Bridge | Consume structured telemetry summaries, operate via screen reader commands, toggle high-contrast palettes | Maps to accessibility service account; inherits Operator view with `screen_reader` capability flag (REQ-ACC-01, `stellar-tui-vision.md`). |", "embedding": null}
{"id": "docs/future/stellar/alignment.md::chunk-6", "path": "docs/future/stellar/alignment.md", "chunk_id": 6, "text": "## Plan: Assistive Requirements - Provide screen-reader optimized landmarks, ARIA-like annotations, and queue navigation orders for Insight Canvas (REQ-ACC-01, #6). - Offer high-contrast theme bundle with palette variants for deuteranopia/protanopia, and ensure autoprefetch respects assistive tech latency (REQ-ACC-01, #62, #87). - Enable keyboard-only workflows across Command Router, keymap engine, and overlays, including focus outlines and escape hatches (REQ-UX-01, REQ-ACC-01, #1, #2). - Publish accessibility acceptance checklist aligned with Definition of Done to guarantee regression coverage (`stellar-tui-vision.md` step 3).", "embedding": null}
{"id": "docs/future/stellar/alignment.md::chunk-7", "path": "docs/future/stellar/alignment.md", "chunk_id": 7, "text": "## Risks & Clarifications - Need explicit sign-off from Core, SecOps, SRE, DX squads to confirm capability assignments during Validate phase. - Baseline APDEX and CSAT values pending instrumentation; to be captured alongside metrics checklist during validation.", "embedding": null}
{"id": "docs/future/stellar/backlog.md::chunk-1", "path": "docs/future/stellar/backlog.md", "chunk_id": 1, "text": "## Method - Epics group roadmap milestones with direct trace to blueprint initiatives (`docs/future/MaxThink-Stellar.md`). - Each epic lists covered requirements (REQ-*) and blueprint references (#). - Exit metrics echo primary targets from `todo.md` Milestone Snapshot and blueprint metrics.", "embedding": null}
{"id": "docs/future/stellar/backlog.md::chunk-2", "path": "docs/future/stellar/backlog.md", "chunk_id": 2, "text": "## Epic Table | Epic ID | Milestone | Description | Requirements | Blueprint Trace | Exit Metrics | | ------- | --------- | ----------- | ------------ | ---------------- | ------------- | | EPIC-CORE | M1 | Deliver Stellar Core kernel with Command Router, Keymap Engine, FlexGrid layout, Input Guard, keeping CLI/TUI parity | REQ-UX-01, REQ-UX-02, REQ-ACC-01 | #1, #2, #4, #63 | METRIC-APDEX ≤ 180 мс, METRIC-CSAT ≥ 4.5 | | EPIC-RESILIENCE | M2 | Implement Local Resilience Cache, Conflict Resolver, Predictive Prefetch, chaos robustness | REQ-REL-01, REQ-DATA-01, REQ-PERF-01 | #14, #15, #35, #67 | METRIC-AVAIL ≥ 99.3%, METRIC-LATENCY 95p ≤ 200 мс | | EPIC-SECURITY | M3 | Harden sandbox with RBAC, Secure Signing, Dynamic Secrets, audit ledger | REQ-SEC-01, REQ-SEC-02, REQ-SEC-03 | #9, #10, #11, #27, #57, #74, #88 | METRIC-SEC-INC = 0 критических, METRIC-AUDIT-OK ≥ 95% | | EPIC-OBS | M4 | Build Observability Mesh, Telemetry Overlay, Debug Orchestrator, Incident Timeline | REQ-OBS-01, REQ-PERF-01, REQ-OPS-01 | #8, #20, #45, #52, #23 | METRIC-MTTD ≤ 2 мин, METRIC-MTTR ≤ 15 мин | | EPIC-DELIVERY | M5 | Launch Trusted Pipeline, Governance Portal, Policy Validator, Marketplace guardrails | REQ-OPS-01, REQ-INT-01, REQ-DX-01 | #24, #42, #55, #75, #79, #85, #99 | METRIC-EXT-ADOPT ≥ 60%, METRIC-AVAIL ≥ 99.5% | | EPIC-LAUNCH | M6 | Final regression, training path, release readiness, reviewer enablement | REQ-ACC-01, REQ-OPS-01 | #43, #58, #87 | SLA adherence ≥ 99%, Review Effort ↓ 30% |", "embedding": null}
{"id": "docs/future/stellar/backlog.md::chunk-3", "path": "docs/future/stellar/backlog.md", "chunk_id": 3, "text": "## Milestone Ordering Check - M0 prerequisites satisfied by alignment artifacts (this document, `alignment.md`, RFC/ADR templates, DoD). - M1–M6 epics locked to milestone windows (Week 1–10), enabling incremental delivery while preserving trace continuity.", "embedding": null}
{"id": "docs/future/stellar/backlog.md::chunk-4", "path": "docs/future/stellar/backlog.md", "chunk_id": 4, "text": "## Trace Summary - #1 → EPIC-CORE (Command Router) → REQ-UX-01. - #4 → EPIC-CORE (FlexGrid) → REQ-UX-02. - #14 → EPIC-RESILIENCE (Local Resilience Cache) → REQ-REL-01. - #27 → EPIC-SECURITY (Dynamic Secrets Injection) → REQ-SEC-03. - #79 → EPIC-DELIVERY (Trusted Pipeline) → REQ-OPS-01.", "embedding": null}
{"id": "docs/future/stellar/chaos-log-20250918.md::chunk-1", "path": "docs/future/stellar/chaos-log-20250918.md", "chunk_id": 1, "text": "- **Script**: `./scripts/chaos/resilience_loop.sh 600 15` - **Iterations**: 30 - **Duration**: 603 seconds - **Result**: 30 passes, 0 failures (each pass executes `cargo test -p codex-core --test resilience_chaos -- --nocapture`). - **Log**: `codex-rs/target/chaos/resilience_chaos_20250918T184211.log`", "embedding": null}
{"id": "docs/future/stellar/chaos-log-20250918.md::chunk-2", "path": "docs/future/stellar/chaos-log-20250918.md", "chunk_id": 2, "text": "## Notes - Queue replay and cache snapshot recovery remained stable across all iterations. - Risk alerts emitted on each loop; no manual intervention required. - Log retention: `target/chaos` (add to archival artefacts if needed).", "embedding": null}
{"id": "docs/future/stellar/definition-of-done.md::chunk-1", "path": "docs/future/stellar/definition-of-done.md", "chunk_id": 1, "text": "## Checklist - [ ] **Unit Coverage** — Critical logic has ≥90% line coverage with failure mode tests (REQ-UX-01, REQ-REL-01, REQ-SEC-03). Include `pretty_assertions::assert_eq` in Rust tests. - [ ] **Snapshot Integrity** — TUI components capture updated Insta snapshots; review pending snapshots (`cargo insta pending-snapshots -p codex-tui`) (REQ-UX-02, REQ-ACC-01). - [ ] **Security Controls** — Secrets redaction, RBAC enforcement, signed artifacts validated; run static analysis and dependency audit (REQ-SEC-01/02/03, #9, #27, #57). - [ ] **Observability Hooks** — Emit OpenTelemetry spans and metrics for latency, cache hit, error rate; dashboards updated (REQ-OBS-01, REQ-PERF-01, #8, #17). - [ ] **Accessibility Compliance** — Screen reader landmarks, keyboard paths, contrast verification, focus order tests executed (`REQ-ACC-01`, `stellar-tui-vision.md`). - [ ] **Performance Guardrails** — Benchmark ensures APDEX ≤ 180 мс, latency p95 ≤ 200 мс where relevant (METRIC-APDEX, METRIC-LATENCY). - [ ] **Documentation & Trace** — Update RFC/ADR status, link requirement trace tables, refresh runbooks/checklists (REQ-OPS-01, REQ-DX-01, #24, #79).", "embedding": null}
{"id": "docs/future/stellar/definition-of-done.md::chunk-2", "path": "docs/future/stellar/definition-of-done.md", "chunk_id": 2, "text": "## Evidence Guidelines - Attach test reports (unit, snapshot, security, observability) to fast-review package. - Record metrics deltas in `docs/future/stellar/metrics.md` (created during Validate step). - Ensure task tracker entries link to EPIC IDs from `backlog.md` and requirement IDs.", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-1", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 1, "text": "## Inputs - `docs/rfcs/0002-stellar-core-kernel.md` - kernel architecture goals for Command Router, Keymap Engine, FlexGrid, Input Guard (REQ-UX-01/02, REQ-ACC-01; #1, #2, #4, #63). - `docs/future/MaxThink-Stellar.md` - requirement trace for personas and metrics (REQ-UX-01/02, REQ-ACC-01, REQ-PERF-01; #1, #2, #4, #6, #16, #63). - `docs/future/stellar-tui-vision.md` - shared CLI/TUI parity vision and accessibility baselines. - `docs/future/stellar/definition-of-done.md` - Definition of Done guardrails for unit, snapshot, accessibility, security, observability.", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-2", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 2, "text": "## Checklist - [x] KEYMAP - Persona aligned keymap and command routes confirmed (REQ-UX-01, REQ-ACC-01; #1, #2, #6). - [x] FLEXGRID - FlexGrid baseline and fallback layouts approved (REQ-UX-02; #4, #63). - [x] MICROCOPY - Golden Path and Progressive Disclosure copy agreed (REQ-UX-01, REQ-ACC-01; #1, #45).", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-3", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 3, "text": "## Outputs - Persona-aware keymap matrix and command routing notes for `stellar_core::command_router` with CLI parity. - FlexGrid layout specification (>=120 column baseline, 80-119 column fallback) tracing REQ-UX-02 (#4, #63) and accessibility hooks from REQ-ACC-01. - Golden Path microcopy set and Progressive Disclosure triggers for Insight Canvas and CLI mirrors.", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-4", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 4, "text": "### 1.1 Action Vocabulary | Action ID | Description | Requirement Trace | CLI Alias | | --- | --- | --- | --- | | `core.navigate.next_pane` | Move focus to the next FlexGrid segment | REQ-UX-01 (#1), REQ-ACC-01 (#6) | `codex stellar focus --next` | `core.navigate.prev_pane` | Return focus to the previous segment | REQ-UX-01 (#2) | `codex stellar focus --prev` | `core.palette.open` | Open the command palette router | REQ-UX-01 (#1), REQ-ACC-01 (#62) | `codex stellar command` | `core.canvas.toggle` | Show or hide the Insight Canvas | REQ-UX-01 (#1), REQ-OBS-01 (#45) | `codex stellar canvas toggle` | `core.overlay.telemetry` | Enable the Telemetry Overlay preview | REQ-OBS-01 (#45) | `codex stellar overlay telemetry` | `core.runbook.invoke` | Launch the linked runbook | REQ-OPS-01 (#23) | `codex stellar runbook <id>` | `core.input.undo` | Undo the last Insight Canvas action | REQ-UX-01 (#1), REQ-PERF-01 (#16) | `codex stellar insight undo` | `core.input.redo` | Redo the last action | REQ-UX-01 (#1) | `codex stellar insight redo` | `core.input.field_lock` | Lock the current field against auto updates | REQ-UX-01 (#1), REQ-DATA-01 (#67) | `codex stellar field lock` | `core.input.confidence` | Show Confidence Bar and reason codes | REQ-DATA-01 (#67), REQ-UX-01 (#1) | `codex stellar insight confidence` | `core.input.submit` | Confirm the current insight or command | REQ-UX-01 (#1) | `codex stellar insight submit` | `core.accessibility.toggle` | Toggle high contrast or screen reader mode | REQ-ACC-01 (#6, #62, #87) | `codex stellar accessibility toggle`", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-5", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 5, "text": "### 1.2 Global Keymap (Baseline) | Action ID | Default Binding | Assistive Alternate | Rationale | | --- | --- | --- | --- | | `core.navigate.next_pane` | `Tab` | `Ctrl+Right` | Linear navigation keeps screen reader order intact (REQ-ACC-01 #6). | `core.navigate.prev_pane` | `Shift+Tab` | `Ctrl+Left` | Symmetric control supports braille display reversal. | `core.palette.open` | `Ctrl+K` | `F1` | Matches existing CLI/TUI command palette patterns. | `core.canvas.toggle` | `Ctrl+I` | `Ctrl+Alt+I` | Mnemonic for Insight Canvas with sticky modifier fallback (#1). | `core.overlay.telemetry` | `Ctrl+O` | `F6` | Quick path to Observability Mesh overlays (#45). | `core.runbook.invoke` | `Ctrl+R` | `F9` | Mnemonic `R` for runbook (REQ-OPS-01 #23). | `core.input.undo` | `Ctrl+Z` | `Alt+Backspace` | Standard editing convention. | `core.input.redo` | `Ctrl+Shift+Z` | `Ctrl+Y` | Standard redo pairing. | `core.input.field_lock` | `Ctrl+L` | `Alt+L` | Direct mnemonic for Lock (#67). | `core.input.confidence` | `i` (in-canvas) | `Shift+Enter` | Lightweight Progressive Disclosure (REQ-DATA-01 #67). | `core.input.submit` | `Ctrl+Enter` | `Enter` with confirmation toggle | Prevents accidental submits.", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-6", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 6, "text": "### 1.3 Persona Overlays | Persona | Primary Actions | Overlay Binding | Notes | | --- | --- | --- | --- | | Operator | `core.overlay.telemetry`, `core.runbook.invoke`, `core.input.confidence` | `Ctrl+O`, `Ctrl+R`, `i` | Aligns with Incident Timeline workflows (REQ-OBS-01 #45). | SRE | `core.overlay.telemetry`, `core.palette.open` filtered for chaos tools | `Ctrl+Shift+T` | Command palette filtered by tag `role:sre` (REQ-REL-01 #14, #35). | SecOps | `core.palette.open` scoped to security actions, `core.input.field_lock` | `Ctrl+Shift+K`, `Ctrl+L` | Requires guardrail confirmation (REQ-SEC-01 #9, #11, M3 follow-up). | Platform Engineer | `core.runbook.invoke` -> pipeline scripts, `core.input.submit` -> approvals | `Alt+Enter` (submit override) | Role DSL enables override, keeps governance trace (#79). | Assistive Tech Bridge | All actions exposed via alternates plus sequential hints | `F` keys, onscreen hint labels | Screen reader can recite bindings on `Shift+?` (REQ-ACC-01 #6).", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-7", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 7, "text": "### 1.4 Routing Pathways - Command Router (`stellar_core::command_router`) normalizes terminal events to action IDs and adds persona metadata (`role`, `capabilities`, `assistive=true`). - Overlay rules apply in priority order `assistive > role > global` (REQ-ACC-01 #6, RFC 0002 section 4.1). - CLI/TUI parity: every routed action is emitted on `stellar_kernel::bridge::events` and serialized as JSON `{action, payload, source}` for CLI parity (`REQ-UX-01`, `stellar-tui-vision.md`). CLI requests land via the `codex stellar <action>` subcommand which mirrors the same payload format. - Input Guard will call `guard::check(action, persona)` before execution, reusing security policy hooks planned for M3 (REQ-UX-01, #56).", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-8", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 8, "text": "### 2.1 Baseline Layout (Width >= 120 columns) ``` +------------------------------+----------------------+ | Insight Canvas (70%) | Telemetry Overlay | | - Prompt Field | - Latency Heatmap | | - Suggestions Stack | - Cache Hit Panel | | - Confidence Bar | - Runbook Shortcuts | +--------------+---------------+----------------------+ | Command Log | Golden Path Footer (two actions max) | | (CLI parity) | - Submit - Open Overlay | +--------------+--------------------------------------+ ``` - Grid tracks: `col0=7fr`, `col1=3fr`, `row0=minmax(12, auto)`, `row1=3`. - Telemetry overlay collapses back into Insight Canvas when disabled, freeing `col1` for the runbook drawer (#45).", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-9", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 9, "text": "### 2.2 Narrow Layout (Width 80-119 columns) ``` +----------------------------------------------+ | Insight Canvas (stacked) | | - Prompt Field | | - Suggestions (accordion) | | - Confidence Bar (inline) | +----------------------------------------------+ | Tab Strip: [Telemetry] [Command Log] [Runbook]| +----------------------------------------------+ | Golden Path Footer (stacked buttons) | +----------------------------------------------+ ``` - `tab_strip` replaces the side overlay; keyboard navigation cycles with `Ctrl+Alt+Right/Left` (#63). - Focus order: Canvas -> Footer -> Tabs (Telemetry -> Command Log -> Runbook) (REQ-ACC-01 #6).", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-10", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 10, "text": "### 2.3 CLI/TUI Bridge Alignment - Command Log row mirrors CLI transcript output from `codex stellar --json` to maintain parity (`stellar-tui-vision.md`). - FlexGrid template реализован программно в `codex-rs/tui/src/stellar/view.rs` через Layout API Ratatui (REQ-UX-02 #4).", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-11", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 11, "text": "### 2.4 Accessibility Notes - Focus outlines stay visible through layout transitions; `prefix_lines` provides narration text for screen readers (REQ-ACC-01 #6, #62). - High contrast palettes from `codex-rs/tui/styles.md` apply to Confidence Bar and Golden Path footer to satisfy WCAG AA.", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-12", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 12, "text": "### 3.1 Golden Path Actions (two steps) 1. **Submit Insight** - Button text: \"Send Insight\" (Operator/SRE); CLI echo `> codex stellar insight submit`. 2. **Open Telemetry Overlay** - Secondary action: \"Show Metrics (Ctrl+O)\" referencing the key binding. - Footer hint: `Need a runbook? Press Ctrl+R` (REQ-OPS-01 #23).", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-13", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 13, "text": "### 3.2 Progressive Disclosure Hints - Press `i` or choose \"Explain Confidence\" to reveal a panel titled \"Why this insight?\" with bullet reasons from the Confidence Bar (#67). - Screen reader summary appends `Confidence 0.82 - based on recent telemetry` (REQ-ACC-01 #6). - Undo/Redo hint toast appears after the first edit: `Undo (Ctrl+Z) / Redo (Ctrl+Shift+Z)` wrapped with `textwrap::wrap` for compact layout support.", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-14", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 14, "text": "### 3.3 Microcopy Guardrails - Tone: action oriented, under 45 characters per hint to maintain cognitive ease (Definition of Done accessibility clause). - Avoid jargon; reuse nouns from `MaxThink-Stellar.md` (Insight, Telemetry, Runbook). - Provide the same strings via CLI help: `codex stellar help insight` prints mirrored copy (REQ-UX-01).", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-15", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 15, "text": "### 3.4 Validation Hooks - Snapshot baselines: `insight_canvas_default.snap` (wide) and `insight_canvas_compact.snap` (narrow) capture footer and copy variations. - Accessibility smoke: `tests/accessibility/stellar_core_smoke.rs` asserts hint presence (REQ-ACC-01). - APDEX instrumentation: timers around `core.input.submit` capture latency baseline (REQ-PERF-01 #16).", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-16", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 16, "text": "## 4. Traceability Summary | Artifact | Requirement(s) | Blueprint Ref | | --- | --- | --- | | Keymap matrix and command routes | REQ-UX-01, REQ-ACC-01 | #1, #2, #6, #62 | | FlexGrid layout specification | REQ-UX-02, REQ-ACC-01 | #4, #63 | | Golden Path microcopy | REQ-UX-01, REQ-ACC-01, REQ-OBS-01, REQ-OPS-01 | #1, #23, #45 |", "embedding": null}
{"id": "docs/future/stellar/m1-core-plan.md::chunk-17", "path": "docs/future/stellar/m1-core-plan.md", "chunk_id": 17, "text": "## 5. Next Build Actions - Implement Command Router and Keymap Engine per section 1, emitting bridge events for CLI parity. - Materialize FlexGrid templates and Golden Path footer UI in `codex-tui` with the referenced snapshot tests. - Configure telemetry capture for APDEX and latency before entering the Validate phase.", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-1", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 1, "text": "## Inputs - `docs/rfcs/0003-stellar-resilience.md` - архитектурные рамки Local Resilience Cache, Conflict Resolver, Weighted Confidence, Predictive Prefetch (REQ-REL-01, REQ-DATA-01, REQ-PERF-01; #14, #15, #32, #35, #67). - `docs/future/MaxThink-Stellar.md` - метрики и ответственность команд (Resilience Squad/SRE, METRIC-AVAIL, METRIC-LATENCY). - `docs/future/stellar/adrs/adr-res-001.md` - выбор backend’а (`sled`) и требования по восстановлению. - `docs/future/stellar/backlog.md` - EPIC-RESILIENCE, trace к #14/#15/#35/#67.", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-2", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 2, "text": "## Checklist - [x] CACHE - Спроектировать Local Resilience Cache и Resilient Transport с TTL/eviction и offline-очередями (REQ-REL-01; #14, #35, #71). - [x] CONFLICT - Описать Intent Conflict Resolver API и контракт TUI/CLI (REQ-DATA-01; #15). - [x] CONFIDENCE - Согласовать Weighted Confidence scoring и telemetry trace (REQ-DATA-01, REQ-PERF-01; #16, #67).", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-3", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 3, "text": "## Outputs - Cache/transport архитектура с классами, интерфейсами и политиками TTL/eviction + интеграцией с chaos профилями. - API-спецификация Conflict Resolver (data model, events, UI hooks, CLI parity). - Weighted Confidence scoring матрица, источники сигналов и telemetry hook-схема. - План тестов: unit, integration, chaos, benchmarks.", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-4", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 4, "text": "### 1.1 Компоненты | Component | Responsibility | Key Interfaces | Notes | | --- | --- | --- | --- | | `resilience::cache::CacheStore` | TTL storage, snapshotting, encryption(ADR-RES-001) | `get`, `put`, `evict`, `snapshot`, `hydrate` | Backend default `sled`, pluggable trait. | | `resilience::transport::RetryQueue` | Очередь команд/инсайтов в offline-режиме | `enqueue(cmd)`, `drain(policy)` | Policies: exponential backoff, max staleness. | | `resilience::metrics::CacheStats` | Cache hit/miss, latency, durability metrics | OTLP events, inline panel for SRE | Feeds METRIC-AVAIL, METRIC-LATENCY. |", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-5", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 5, "text": "### 1.2 Политики - **TTL**: конфигурируется (default 15мин); eviction по LRU + high-watermark (disk usage). Trace → #35. - **Snapshots**: `snapshot()` создаёт deterministic dump → восстановление при старте (`hydrate`). - **Chaos Hooks**: `ChaosProfile` (network drop, disk corruption) → автоматический failover на in-memory fallback, метрики писаются в OTEL (#91). - **Transport Retry**: strategy = `base_delay=500ms`, `factor=2.0`, `jitter=true`, расходы ограничены `max_attempts=5`. Queue flush запускается по восстановлению соединения либо ручному триггеру CLI (`codex resilience flush`).", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-6", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 6, "text": "### 1.3 Интеграции - TUI: StellarKernel подписывается на cache events (`CacheEvent::Hydrated`, `CacheEvent::ResyncRequired`) чтобы обновлять UI состояния. - CLI: `codex stellar cache status` (добавить позже) будет использовать тот же API `CacheStats::snapshot`.", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-7", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 7, "text": "### 2.1 Data Model ``` pub struct ConflictEntry { pub id: ConflictId, pub key: String, pub sources: Vec<SourceValue>, pub resolution: ResolutionState, pub confidence: f32, pub reason_codes: Vec<String>, pub last_updated: DateTime<Utc>, } ``` - `sources`: origin metadata (cache, remote, local override) + timestamp. - `resolution`: `Pending`, `AutoResolved`, `UserAccepted`, `UserRejected`.", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-8", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 8, "text": "### 2.2 API Surface | Method | Description | Consumer | | --- | --- | --- | | `list_pending(limit)` | Возвращает N конфликтов для UI | TUI overlay, CLI `codex stellar conflicts list` | | `apply_resolution(id, decision)` | Применить выбор пользователя | TUI action footer, CLI `codex stellar conflicts resolve` | | `subscribe_updates()` | Stream для UI | TUI overlay refresh |", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-9", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 9, "text": "### 2.3 UX Contract - TUI: Insight Canvas показывает inline сообщения (`ConflictBadge`) + раскрытие overlay (`Ctrl+Shift+C`). - CLI: JSON события транслируются через `StellarCliEvent` (`action=core.conflict.resolve`). - Accessibility: ответы читаются screen reader’ом (ARIA-like hints).", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-10", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 10, "text": "### 3.1 Factors & Weights | Factor | Signal | Default Weight | Notes | | --- | --- | --- | --- | | Freshness | `now - source.timestamp` | 0.35 | Decays exponentially; floor 0.1. | | Source Trust | `source.trust_score` | 0.30 | Derived from policy metadata (SecOps). | | Schema Validity | Validation results | 0.20 | Fails = negative penalty. | | Telemetry Alignment | Latency/APDEX guardrails | 0.10 | Uses metrics from §1.2. | | User Overrides | manual accept/reject | 0.05 | Reinforces accepted sources. |", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-11", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 11, "text": "### 3.2 Telemetry & Trace - Emit `confidence.scored` event with factor breakdown (OTLP span attributes). - Cache metrics write to `CacheStats` → aggregator updates Weighted Confidence history. - Baseline metrics captured via benchmark harness (`cargo bench -p codex-core --bench resilience_prefetch`).", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-12", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 12, "text": "### 3.3 UI Mapping - Insight Canvas Confidence Bar: thresholds (>=0.75 green, 0.4-0.74 amber, <0.4 red). - CLI: `codex stellar insight confidence` outputs JSON with factor array.", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-13", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 13, "text": "## 4. Test & Validation Matrix | Scope | Tooling | Target | | --- | --- | --- | | Cache unit tests | `cargo test -p codex-core --lib resilience::*` | TTL, hydration, eviction correctness | | Integration (CLI/TUI) | `cargo test -p codex-tui --test all`, `cargo run -p codex-cli -- stellar ...` | CLI parity, conflict flows | | Chaos | `scripts/chaos/resilience.sh` (network drop, disk corruption) | Recovery <= 3s, zero data loss | | Benchmarks | `cargo bench -p codex-core --bench resilience_prefetch` | Prefetch latency <= 80 мс median | | Metrics | OTEL export via `resilience::metrics::export()` | METRIC-AVAIL >= 99.3%, METRIC-LATENCY p95 <= 200 мс |", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-14", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 14, "text": "## 5. Next Build Actions 1. Имплементировать `resilience::cache` и `resilience::transport` модули (sled backend, retry queue). 2. Подключить Conflict Resolver API и UI (overlay + CLI команды). 3. Реализовать Weighted Confidence калькулятор и интеграцию со Stellar Kernel. 4. Добавить хаос-скрипты и Criterion бенчмарки для cache/prefetch. 5. Обновить метрики и документацию (metrics-baseline.md, runbooks).", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-15", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 15, "text": "## 6. Implementation Snapshot — 2025-09-18 - ✅ **Local Resilience Cache & Queue** (`codex-rs/core/src/resilience/cache.rs`, `transport.rs`) реализованы с шифрованием, TTL и snapshot API. Trace → REQ-REL-01. - ✅ **Chaos Loop Harness** — `scripts/chaos/resilience_loop.sh` гоняет `cargo test -p codex-core --test resilience_chaos` в цикле (≥10 мин) и пишет логи в `target/chaos/` (30/30 PASS за 603 с 2025-09-18). - ✅ **Detector Registry & Signal Cache** (`codex-rs/core/src/mcp/intake/detectors.rs`, `cache.rs`) поддерживают hot reload и fingerprint (path + mtime). Trace → REQ-DATA-01. - ✅ **Weighted Confidence & Conflict UX** (`codex-rs/core/src/stellar/state.rs`, `tui/src/stellar/view.rs`) подсвечивают risk alerts, p95 latency и конфликты в TUI/CLI. Trace → REQ-DATA-01, REQ-PERF-01. - ✅ **CLI/TUI coverage** — `cargo test -p codex-core`, `cargo test -p codex-tui`, `cargo test -p codex-cli` (2025-09-18) зелёные; снапшоты обновлены (insta). - ✅ **Criterion Benchmark Harness** — `cargo bench -p codex-core --bench resilience_prefetch` измеряет cache put/get и snapshot hydrate латентность (целевой p95 ≤ 80 мс).", "embedding": null}
{"id": "docs/future/stellar/m2-resilience-plan.md::chunk-16", "path": "docs/future/stellar/m2-resilience-plan.md", "chunk_id": 16, "text": "Итерация 2025-09-18: put/get ≈ 335 µs, snapshot hydrate ≈ 19 мс, prefetch record/top ≈ 152 нс. - ℹ️ **Pending**: chaos сценарии и Criterion бенчмарки (см. §4.4) запланированы к включению в Validate фазу.", "embedding": null}
{"id": "docs/future/stellar/m3-security-plan.md::chunk-1", "path": "docs/future/stellar/m3-security-plan.md", "chunk_id": 1, "text": "## Inputs - `docs/rfcs/0004-stellar-security.md` — рамки RBAC, Secure Signing, Dynamic Secrets, Sandbox Runner (REQ-SEC-01/02/03; #9, #10, #11, #27, #70, #74, #88). - `docs/future/MaxThink-Stellar.md` — метрики METRIC-SEC-INC, METRIC-AUDIT-OK, требования SRE/SecOps. - `docs/future/stellar-tui-vision.md` — UX/Accessibility требования для consent flows и banners. - `docs/future/stellar/backlog.md` — EPIC-SECURITY трейс к #9/#10/#11/#27/#57/#74/#88. - `docs/future/stellar/definition-of-done.md` — секьюрити и compliance чек-листы.", "embedding": null}
{"id": "docs/future/stellar/m3-security-plan.md::chunk-2", "path": "docs/future/stellar/m3-security-plan.md", "chunk_id": 2, "text": "## Checklist - [ ] THREAT — Провести threat modeling по RBAC, секретам, supply chain (REQ-SEC-01/02/03; #9, #11, #27, #70). - [ ] SANDBOX — Спроектировать Sandbox Runner + Manifest Write Shield (bubblewrap/nsjail) с guardrails (#10, #70). - [ ] COMPLIANCE — Подготовить Compliance Pre-flight checklist и Consent Banner copy (#38, #57).", "embedding": null}
{"id": "docs/future/stellar/m3-security-plan.md::chunk-3", "path": "docs/future/stellar/m3-security-plan.md", "chunk_id": 3, "text": "## Outputs - Threat Model canvas (attack vectors, mitigations, owners, trace to REQ-SEC-01/02/03). - Sandbox Runner architecture: privilege boundaries, manifest policy, integration points. - Compliance pre-flight checklist + consent banner draft (A11y + legal review path).", "embedding": null}
{"id": "docs/future/stellar/m3-security-plan.md::chunk-4", "path": "docs/future/stellar/m3-security-plan.md", "chunk_id": 4, "text": "| Vector | Impact | Mitigation | Trace | | ------ | ------ | ---------- | ----- | | Unauthorized command execution via CLI bridge (RBAC gap) | Privilege escalation, METRIC-SEC-INC breach | Persona-scoped RBAC policies enforced in `codex_cli::mcp_cmd` before dispatch; signed command envelope (`Secure Command Signing`) with timestamped nonce. | REQ-SEC-01 (#9, #74) | | Secrets leakage during wizard analysis | Exposure of credentials, partner breach | Dynamic Secrets Injection with temp vault lease, scrubbed from logs; secure clipboard redaction; wizard masking for env vars. | REQ-SEC-03 (#27, #88, #92) | | Supply chain tampering of manifests/plugins | Compromised sandbox runtime | Signed manifests with checksum validation, policy allowlist, immutable audit entry per load; runner verifies signature before hydrated manifest. | REQ-SEC-02 (#10, #57) | | Sandbox escape via filesystem writes | Host compromise | Manifest Write Shield (bubblewrap/nsjail) restricting write targets; runtime seccomp profile with CPU/mem quotas; audit on violation.", "embedding": null}
{"id": "docs/future/stellar/m3-security-plan.md::chunk-5", "path": "docs/future/stellar/m3-security-plan.md", "chunk_id": 5, "text": "| REQ-SEC-01/02 (#9, #10) | | Audit trail forgery | Loss of traceability, METRIC-AUDIT-OK drop | Immutable Audit Ledger (append-only, hash-linked), periodic export to secure storage; cross-check with governance portal. | REQ-SEC-02 (#57) |", "embedding": null}
{"id": "docs/future/stellar/m3-security-plan.md::chunk-6", "path": "docs/future/stellar/m3-security-plan.md", "chunk_id": 6, "text": "### Action Items 1. Define RBAC policy schema & signing envelope format (owner: Security eng). 2. Implement dynamic secrets broker + scrubber hooks in wizard pipeline (owner: Platform). 3. Extend audit ledger to hash link entries + export schedule (owner: SecOps).", "embedding": null}
{"id": "docs/future/stellar/m3-security-plan.md::chunk-7", "path": "docs/future/stellar/m3-security-plan.md", "chunk_id": 7, "text": "### Architecture - **Runner**: Bubblewrap/nsjail profile with namespace isolation, CPU/RAM/time quotas, outbound network deny by default. - **Manifest Write Shield**: Declarative allowlist of writable paths (tmpfs, project cache). All manifests validated before run; unauthorized writes trigger runner halt. - **Integration**: Runner invoked via `codex_exec` provider; telemetry events feed METRIC-SEC-INC and METRIC-AUDIT-OK.", "embedding": null}
{"id": "docs/future/stellar/m3-security-plan.md::chunk-8", "path": "docs/future/stellar/m3-security-plan.md", "chunk_id": 8, "text": "### Policy Hooks - Manifest Validation Pipeline: 1. Signature + checksum check (Secure Signing key rotation). 2. Schema validation (include RBAC persona scope). 3. Capability diff vs baseline → audit entry. - Runtime Enforcement: - Seccomp profile loaded per manifest class. - Real-time resource monitor -> resilience queue for throttling. - Consent state forwarded to compliance log.", "embedding": null}
{"id": "docs/future/stellar/m3-security-plan.md::chunk-9", "path": "docs/future/stellar/m3-security-plan.md", "chunk_id": 9, "text": "### Pre-Flight Checklist (to run before sandbox exec) 1. Verify RBAC persona and scope (no wildcard roles). 2. Confirm manifest signature + hash (log ledger ID). 3. Validate secrets source (vault lease active, expiry ≥ session window). 4. Confirm audit channel healthy (ledger append works, export destination reachable). 5. Accessibility review (voiceover compatible banner text).", "embedding": null}
{"id": "docs/future/stellar/m3-security-plan.md::chunk-10", "path": "docs/future/stellar/m3-security-plan.md", "chunk_id": 10, "text": "### Consent Banner Copy (draft) > \"Codex will execute commands in a secured sandbox with limited access to your workspace. By continuing, you confirm that RBAC policies and manifest permissions for this session are approved. Recorded events will appear in the immutable audit ledger.\"", "embedding": null}
{"id": "docs/future/stellar/m3-security-plan.md::chunk-11", "path": "docs/future/stellar/m3-security-plan.md", "chunk_id": 11, "text": "## 4. Validation Plan (Preview) - Security unit tests for RBAC enforcement, secrets scrubber, audit ledger hashing. - Sandbox integration tests (nsjail/bubblewrap) with manifest fixtures. - Compliance pre-flight automation: CLI command `codex sandbox preflight --manifest <path>` returns checklist status.", "embedding": null}
{"id": "docs/future/stellar/m3-security-validation.md::chunk-1", "path": "docs/future/stellar/m3-security-validation.md", "chunk_id": 1, "text": "**Traceability**: REQ-SEC-01/02/03 (#9, #10, #11, #27, #57, #74, #88) · Source refs: `MaxThink-Stellar.md`, `stellar-tui-vision.md`, `docs/rfcs/0004-stellar-security.md`", "embedding": null}
{"id": "docs/future/stellar/m3-security-validation.md::chunk-2", "path": "docs/future/stellar/m3-security-validation.md", "chunk_id": 2, "text": "## 1. Unit Test Coverage - `codex-core` security module now verifies consent-to-ledger flow, hash linking, and policy evidence expiry (`codex-rs/core/src/security/mod.rs` tests). - Exec pipeline audit instrumentation validated via `suite::exec_stream_events` (single-thread regression) capturing timeout, denial, success paths. - CLI `codex audit export` smoke test ensures compliance export is reachable (`codex-rs/cli/tests/audit_export.rs`).", "embedding": null}
{"id": "docs/future/stellar/m3-security-validation.md::chunk-3", "path": "docs/future/stellar/m3-security-validation.md", "chunk_id": 3, "text": "## 2. Cross-Platform Security Review - Linux: Verified Landlock runner parameters, RLIMIT CPU/RAM application, and fallback ledger behavior under file locks. - macOS Seatbelt: Reviewed policy serialization parity (no code divergences introduced by audit work); regression tests cover Seatbelt spawn path. - Windows (fallback): Confirmed ledger inert (no `setrlimit`) and audit export read-only. - No deviations from `CODEX_SANDBOX_*` guardrails; consent logging retains metadata scrub using `SecretBroker`.", "embedding": null}
{"id": "docs/future/stellar/m3-security-validation.md::chunk-4", "path": "docs/future/stellar/m3-security-validation.md", "chunk_id": 4, "text": "## 3. Pen-Test Dry Run (Sandbox Runner) - Simulated attempt to write to `/etc/shadow` using the exec harness with read-only policy; manually injected `ExecAuditStatus::SandboxDenied` via audit helper to confirm ledger handling and metadata scrubbing. - Forced CPU exhaustion scenario via `suite::exec_stream_events::test_exec_timeout_returns_partial_output`; generated `exec_timeout` audit entry with resource notice. - Confirmed Dynamic Secret injection values are redacted from audit exports through `SecretBroker::scrub_text` assertions.", "embedding": null}
{"id": "docs/future/stellar/m3-security-validation.md::chunk-5", "path": "docs/future/stellar/m3-security-validation.md", "chunk_id": 5, "text": "## 4. Compliance & Traceability - `codex audit export --pretty --since 2025-09-18T00:00:00Z --policy-evidence` generates tamper-evident JSON with hash chain and 24h policy evidence TTL. - Audit export payload inspected for SHA-256 chain continuity; baseline METRIC-AUDIT-OK = **100%**, METRIC-SEC-INC = **0**. - Consent events include `nonce`, `signed_at`, `verifying_key` metadata, satisfying governance portal requirements.", "embedding": null}
{"id": "docs/future/stellar/m3-security-validation.md::chunk-6", "path": "docs/future/stellar/m3-security-validation.md", "chunk_id": 6, "text": "## 5. Observations & Follow-ups - Temporary ledger fallback engages when long-running tests hold sled lock; warning logged. Operational metric recommended for SRE dashboard (Workstream 4 dependency). - Recommend nightly job archiving exported ledger snapshots for Governance Portal ingestion (Workstream 5).", "embedding": null}
{"id": "docs/future/stellar/metrics-baseline.md::chunk-1", "path": "docs/future/stellar/metrics-baseline.md", "chunk_id": 1, "text": "| Metric | Baseline | Target | Source / Notes | | ------ | -------- | ------ | --------------- | | METRIC-APDEX | 0.98 (threshold 0.1s) | ≥ 0.85 post-M1 | `codex stellar submit` (5 runs, median 0.05s) on 2025-09-18, local debug build. | | METRIC-CSAT | 4.1 / 5 | ≥ 4.5 | Support survey (N=37) tagged \"Stellar prototype\". | | METRIC-LATENCY (p95) | 52 мс | ≤ 200 мс | `target/debug/codex stellar submit`, 5-run sample (median=50 мс, p95=52 мс). | | METRIC-AVAIL | 98.7% (rolling 30-day) | ≥ 99.3% | Uptime logs from staging environment. | | METRIC-SEC-INC | 1 critical / quarter | 0 | Security incident tracker Q3 summary. | | METRIC-AUDIT-OK | 82% | ≥ 95% | Audit export review 2025-09-10. | | METRIC-MTTD | 12 мин | ≤ 2 мин | Incident timeline analytics. | | METRIC-MTTR | 48 мин | ≤ 15 мин | SRE postmortems (last 4 incidents). | | METRIC-EXT-ADOPT | 18% partner enablement | ≥ 60% | DX cohort adoption for pilot partners. | | Review Effort | 6.5 человеко-часов / PR | ↓ 30% | Reviewer time tracking baseline.", "embedding": null}
{"id": "docs/future/stellar/metrics-baseline.md::chunk-2", "path": "docs/future/stellar/metrics-baseline.md", "chunk_id": 2, "text": "| | Resilience Bench Harness | 2025-09-18: put/get 0.335 мс, snapshot 19.1 мс, prefetch 0.000152 мс | Prefetch ≤ 80 мс, snapshot ≤ 120 мс | `cargo bench -p codex-core --bench resilience_prefetch` (criterion). |", "embedding": null}
{"id": "docs/future/stellar/metrics-baseline.md::chunk-3", "path": "docs/future/stellar/metrics-baseline.md", "chunk_id": 3, "text": "## M4 Observability Validation (2025-09-18) - Toggled Observability Overlay via `Ctrl+O` (REQ-OBS-01) and captured telemetry snapshot in TUI (`cargo test -p codex-tui stellar::ctrl_o_toggles_telemetry_overlay`). - Verified sled-backed OTLP exporter flushes without data loss using mocked collector (`cargo test -p codex-core telemetry_exporter::tests::flush_once_sends_payload_and_clears_sled`). - Prometheus endpoint served live gauges (`cargo test -p codex-core telemetry_exporter::tests::prometheus_endpoint_exposes_latest_snapshot`); latency p95 remained 52 мс (≤ 200 мс target), audit fallback count 0 in baseline sample.", "embedding": null}
{"id": "docs/future/stellar/metrics-baseline.md::chunk-4", "path": "docs/future/stellar/metrics-baseline.md", "chunk_id": 4, "text": "## M5 Delivery Validation (2025-09-19) - Signed insight knowledge pack `1.4.0` with Vault signer `vault:pipeline/insight`; bundle stored in `$CODEX_HOME/pipeline/bundles/insight/1.4.0.tar.gz` (CLI output logged verifying fingerprint and manifest digest) — audit ledger entry recorded via `codex pipeline sign`. - Verified и установили пакет (`codex pipeline verify dist/insight-1.4.0.tar.gz --expect-fingerprint <fingerprint> --install`): diff показал 2 новых файла (`checks/query_v2.sql`, `playbooks/rollback.md`), 1 модификацию (`signals/latency.yml`), текущая активная версия теперь `1.4.0`. - Smoke + unit тесты: `~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test -p codex-core pipeline::tests::sign_verify_install_and_rollback_flow -- --nocapture`; CLI coverage `~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/cargo test -p codex-cli -- --nocapture`. - Запланированный откат `codex pipeline rollback insight 1.3.5` подтвердил автоматическое обновление audit trail и state pointer (`pipeline/state/insight/current`).", "embedding": null}
{"id": "docs/future/stellar/metrics-baseline.md::chunk-5", "path": "docs/future/stellar/metrics-baseline.md", "chunk_id": 5, "text": "## Continuous Quality Safeguards (2025-09-19) - Weekly triage captured via `codex orchestrator triage --persona operator --review-hours 5.0` (targets: APDEX ≥ 0.85, latency p95 ≤ 200 мс, audit fallback = 0, review effort ≤ 4.5 ч). Checklist update: добавить latency drill при превышении порога. - Отчёт приложен к governance пакету и использован для обновления `todo.md` (Continuous Quality Safeguards, пункт triage).", "embedding": null}
{"id": "docs/future/stellar/review-log.md::chunk-1", "path": "docs/future/stellar/review-log.md", "chunk_id": 1, "text": "**Date**: 2025-09-18 **Session**: Workstream 0 Validation Review **Attendees**: Core (Amir / GPT-5-codex), SecOps (virtual), SRE (staging owners), DX (marketplace lead), Accessibility advocate.", "embedding": null}
{"id": "docs/future/stellar/review-log.md::chunk-2", "path": "docs/future/stellar/review-log.md", "chunk_id": 2, "text": "## Agenda 1. Walkthrough of alignment artifacts (`alignment.md`, `backlog.md`). 2. Review RFC set (0002–0005) and ADR drafts for decision coverage. 3. Confirm Definition of Done checklist and metrics baseline. 4. Capture risks and action items.", "embedding": null}
{"id": "docs/future/stellar/review-log.md::chunk-3", "path": "docs/future/stellar/review-log.md", "chunk_id": 3, "text": "## Outcomes - RFCs accepted for drafting status; pending comments recorded inline for each reviewer. - Definition of Done approved with note to add automated contrast test harness during M1. - Metrics baseline acknowledged; SRE to deliver instrumentation plan by 2025-09-22. - No blockers raised for proceeding to M1.", "embedding": null}
{"id": "docs/future/stellar/review-log.md::chunk-4", "path": "docs/future/stellar/review-log.md", "chunk_id": 4, "text": "## Risk Register | ID | Risk | Owner | Mitigation | Status | | -- | ---- | ----- | ---------- | ------ | | R-001 | Async render driver starvation under load | Core | Prototype executor tuning in M1 sprint, track APDEX telemetry | Open | | R-002 | Cache backend corruption due to abrupt shutdown | Resilience | Implement checksum & auto-repair (ADR-RES-001) | Open | | R-003 | Audit ledger storage footprint growth | SecOps | Snapshot rotation (ADR-SEC-001) + compression | Open | | R-004 | Governance portal operational overhead | Platform | Provide deployment automation (ADR-DEL-001), define runbook | Open | | R-005 | Accessibility contrast automation gap | Accessibility | Add automated check in M1 DoD; integrate into CI | Open |", "embedding": null}
{"id": "docs/future/stellar/review-log.md::chunk-5", "path": "docs/future/stellar/review-log.md", "chunk_id": 5, "text": "## Action Items - Core team: produce executor benchmark (due 2025-09-24). - Resilience squad: finalize cache flushing protocol (due 2025-09-23). - SecOps: validate RocksDB compliance stance (due 2025-09-25). - DX: design fast-review package template (due 2025-09-26). - Accessibility: draft contrast automation spec (due 2025-09-22).", "embedding": null}
{"id": "docs/future/stellar/review-log.md::chunk-6", "path": "docs/future/stellar/review-log.md", "chunk_id": 6, "text": "## Notes - Reviewers requested continued trace updates in backlog; backlog doc versioned with commit references. - Agreed to revisit metrics baseline after first instrumentation drop; maintain historical snapshot of this log.", "embedding": null}
{"id": "docs/future/stellar/rfc-adr-template.md::chunk-1", "path": "docs/future/stellar/rfc-adr-template.md", "chunk_id": 1, "text": "**Status**: Draft | Review | Accepted | Superseded **Author**: <Name> **Created**: YYYY-MM-DD **Updated**: YYYY-MM-DD **Reviewers**: Core, SecOps, SRE, DX, Accessibility **Target Release**: M<1-6> / Week <n> ```", "embedding": null}
{"id": "docs/future/stellar/rfc-adr-template.md::chunk-2", "path": "docs/future/stellar/rfc-adr-template.md", "chunk_id": 2, "text": "## 1. Goal & Non-Goals - **Goal**: tie to explicit requirements (e.g., REQ-UX-01 from `MaxThink-Stellar.md`). - **Success Metrics**: map to METRIC-* ids defined in roadmap. - **Non-Goals**: clarify exclusions to keep scope minimal.", "embedding": null}
{"id": "docs/future/stellar/rfc-adr-template.md::chunk-3", "path": "docs/future/stellar/rfc-adr-template.md", "chunk_id": 3, "text": "## 2. Scope & Personas - User personas impacted (Operator, SRE, SecOps, Platform Engineer, Partner Developer, Assistive Tech). - Primary scenarios referencing blueprint idea numbers (#1–#99).", "embedding": null}
{"id": "docs/future/stellar/rfc-adr-template.md::chunk-4", "path": "docs/future/stellar/rfc-adr-template.md", "chunk_id": 4, "text": "## 4. Detailed Design - Components, data structures, algorithms, lifecycle hooks. - Accessibility, security, performance considerations inline. - Call out feature flags and rollout phases.", "embedding": null}
{"id": "docs/future/stellar/rfc-adr-template.md::chunk-5", "path": "docs/future/stellar/rfc-adr-template.md", "chunk_id": 5, "text": "## 7. Validation Plan - Unit tests, snapshot tests, security checks, observability instrumentation. - Metrics baseline & success thresholds (APDEX, LATENCY, SEC-INC, etc.).", "embedding": null}
{"id": "docs/future/stellar/rfc-adr-template.md::chunk-6", "path": "docs/future/stellar/rfc-adr-template.md", "chunk_id": 6, "text": "## Usage Notes - Store approved RFCs under `docs/rfcs/` with incremental numbering. - Stage ADR drafts under `docs/future/stellar/adrs/` and promote to `docs/adrs/` once accepted. - Update `docs/future/index.md` with new RFC/ADR links during Validate step.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-core-001.md::chunk-1", "path": "docs/future/stellar/adrs/adr-core-001.md", "chunk_id": 1, "text": "## Context - Stellar kernel must deliver async rendering without regressing APDEX targets (REQ-UX-01, REQ-PERF-01). - Need unified pipeline for CLI/TUI surfaces while supporting assistive tech focus updates.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-core-001.md::chunk-2", "path": "docs/future/stellar/adrs/adr-core-001.md", "chunk_id": 2, "text": "## Decision Adopt a diff-driven render pipeline that batches layout updates on a bounded tokio executor, emitting frame deltas through a shared `RenderDriver` trait consumed by both TUI and CLI adapters.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-core-001.md::chunk-3", "path": "docs/future/stellar/adrs/adr-core-001.md", "chunk_id": 3, "text": "## Consequences - **Positive**: Consistent rendering semantics, easier snapshot testing, and shared instrumentation for latency metrics. - **Negative**: Requires executor tuning to avoid starvation; introduces dependency on async runtime for CLI bridge. - **Operational**: Must expose configuration knob for frame budget and integrate with observability spans.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-core-001.md::chunk-4", "path": "docs/future/stellar/adrs/adr-core-001.md", "chunk_id": 4, "text": "## Alignment - Requirements: REQ-UX-01, REQ-UX-02, REQ-PERF-01. - Metrics: METRIC-APDEX, METRIC-LATENCY. - Linked Artifacts: `docs/rfcs/0002-stellar-core-kernel.md`, unit & snapshot tests, render benchmark harness.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-del-001.md::chunk-1", "path": "docs/future/stellar/adrs/adr-del-001.md", "chunk_id": 1, "text": "## Context - Governance portal must serve platform engineers, SecOps, and partner developers with high availability (REQ-OPS-01, REQ-DX-01). - Requires trusted pipeline integration and SSO-aware hints.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-del-001.md::chunk-2", "path": "docs/future/stellar/adrs/adr-del-001.md", "chunk_id": 2, "text": "## Decision Deploy governance portal as a self-hosted service bundled with Codex enterprise distribution, running on the same trust boundary as the Trusted Pipeline, with optional SaaS mirror for read-only stakeholders. Authentication handled via organization SSO with scoped tokens for partner developers.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-del-001.md::chunk-3", "path": "docs/future/stellar/adrs/adr-del-001.md", "chunk_id": 3, "text": "## Consequences - **Positive**: Maintains control over signing keys and audit data; easier compliance alignment. - **Negative**: Increases operational burden for on-prem teams. - **Operational**: Provide Terraform module + Helm chart for deployment; SaaS mirror must replicate dashboards without write access.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-del-001.md::chunk-4", "path": "docs/future/stellar/adrs/adr-del-001.md", "chunk_id": 4, "text": "## Alignment - Requirements: REQ-OPS-01, REQ-DX-01, REQ-INT-01. - Metrics: METRIC-EXT-ADOPT, METRIC-AVAIL. - Linked Artifacts: `docs/rfcs/0005-stellar-delivery.md`, deployment runbooks, pipeline integration tests.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-res-001.md::chunk-1", "path": "docs/future/stellar/adrs/adr-res-001.md", "chunk_id": 1, "text": "## Context - Resilience cache must offer offline support, crash recovery, and deterministic snapshots (REQ-REL-01, REQ-DATA-01). - Need lightweight dependency with cross-platform support for CLI/TUI usage.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-res-001.md::chunk-2", "path": "docs/future/stellar/adrs/adr-res-001.md", "chunk_id": 2, "text": "## Decision Default to `sled` embedded store with encryption-at-rest wrapper, while providing pluggable backend interface allowing sqlite or remote KV implementations for specialized deployments.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-res-001.md::chunk-3", "path": "docs/future/stellar/adrs/adr-res-001.md", "chunk_id": 3, "text": "## Consequences - **Positive**: `sled` delivers fast reads/writes, minimal operational footprint. - **Negative**: Requires compaction tuning; limited tooling compared to sqlite. - **Operational**: Provide migration utilities and self-heal logic to rebuild cache on corruption.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-res-001.md::chunk-4", "path": "docs/future/stellar/adrs/adr-res-001.md", "chunk_id": 4, "text": "## Alignment - Requirements: REQ-REL-01, REQ-DATA-01. - Metrics: METRIC-AVAIL, METRIC-LATENCY. - Linked Artifacts: `docs/rfcs/0003-stellar-resilience.md`, cache integration tests, chaos scripts.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-sec-001.md::chunk-1", "path": "docs/future/stellar/adrs/adr-sec-001.md", "chunk_id": 1, "text": "## Context - Security roadmap mandates tamper-evident audit logging (REQ-SEC-02) with export support for governance portal (#57). - Ledger must operate offline and sync once connectivity returns, aligning with resilience requirements.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-sec-001.md::chunk-2", "path": "docs/future/stellar/adrs/adr-sec-001.md", "chunk_id": 2, "text": "## Decision Adopt a Merkleized append-only log stored locally using RocksDB with periodic signed snapshots pushed to governance services; snapshots chained with Ed25519 signatures managed by Secure Signing service.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-sec-001.md::chunk-3", "path": "docs/future/stellar/adrs/adr-sec-001.md", "chunk_id": 3, "text": "## Consequences - **Positive**: Efficient append performance, strong tamper detection, compatibility with signed snapshot exports. - **Negative**: Adds dependency on RocksDB; requires careful tuning for SSD footprint. - **Operational**: Snapshot rotation policy every 5 minutes or 1 MB, whichever comes first; failure triggers alert to SecOps.", "embedding": null}
{"id": "docs/future/stellar/adrs/adr-sec-001.md::chunk-4", "path": "docs/future/stellar/adrs/adr-sec-001.md", "chunk_id": 4, "text": "## Alignment - Requirements: REQ-SEC-02, REQ-OPS-01. - Metrics: METRIC-SEC-INC, METRIC-AUDIT-OK. - Linked Artifacts: `docs/rfcs/0004-stellar-security.md`, audit integration tests, governance export pipeline.", "embedding": null}
